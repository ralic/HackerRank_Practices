/*
 * Copyright 2016 Ralic Lo<raliclo@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 */

/*
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0-20160712001602+0000/userguide/tutorial_java_projects.html
 */

buildscript {
    // Use "jcenter" for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.    
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "http://com.jfrog.bintray" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }
    dependencies {
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3" // Support JUNIT-5
        classpath "com.netflix.nebula:gradle-dependency-lock-plugin:4.3.0" // Support Dynamic version in dependency
        //        classpath "gradle.plugin.com.netflix.nebula:gradle-ospackage-plugin:3.6.1" // Support RPM Package.
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE" // Support Spring Boot
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
        classpath "org.ajoberstar:gradle-git:1.5.1" // Support Gradle-Git
        classpath "com.layer:gradle-git-repo-plugin:2.0.2"
        classpath "com.fasterxml.jackson.core:jackson-core:2.8.5"
        classpath "net.serenity-bdd:serenity-gradle-plugin:1.1.42" // Support Serenity BDD
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.BUILD-SNAPSHOT'// Support Spring Boot
//        classpath 'com.github.multi-os-engine:moe-plugin-gradle:moe-1.2.3'
        // Support Git Repo https://github.com/layerhq/gradle-git-repo-plugin
        //        github("layerhq", "maven-private", "master", "releases")
        //        git("https://github.com/phr00t/jMonkeyVR.git", "jMonkeyVR", "master","releases")

        // JavaFX Port for Mobile
//        classpath "org.javafxports:jfxmobile-plugin:1.0.8"
        // ProGuard Support
//        classpath 'com.github.hotchemi:gradle-proguard-plugin:0.1.0'

        // Google Platform Support
        classpath 'com.google.appengine:gradle-appengine-plugin:1.9.42'
        // Scala.js Support
        // classpath 'com.github.gtache:scalajs-plugin:0.2.0'
        classpath fileTree(dir: 'libs/LeapSDK/lib', include: { '**/*.jar'; '**/*.dylib' })

    }
}

plugins {

    /* J trans C
      id "com.jtransc" version "0.5.2"

     */
    /*
        Javascript Support
        Support Nodejs, Javscript, and Karma/Jasmine
        https://github.com/HappyCodeDay/gradle-node-plugin
        https://github.com/HappyCodeDay/gradle-js-plugin
        https://github.com/HappyCodeDay/karma-gradle
    */
    id "com.jtransc" version "0.5.2"

    id "com.eriwen.gradle.js" version "2.14.1"
    id "com.moowork.node" version "0.13"

    /*  Golang Support
    The plugin provides the following gradle tasks:
        dependencies
        format
        test
        build and buildStatic
     */
//    id "de.flachnetz.golang-gradle-plugin" version "0.1.31"

    /*
        Avro Support
     */
    id "com.commercehub.gradle.plugin.avro" version "0.9.0"

/*
    Scalatest Report Support
    // Uncomment to use Scalatest Report format for ScalaTest only
       Comment to use TestNG Report format for both Java and Scala
        id "com.github.maiflai.scalatest" version "0.14"
 */

//     XCode Support https://github.com/openbakery/gradle-xcodePlugin/releases
//    id "org.openbakery.xcode-plugin" version "0.14.0"
//    https://github.com/a8m/go-lang-cheat-sheet
//      J2 Object C https://github.com/j2objc-contrib/j2objc-gradle
//    id "com.github.j2objccontrib.j2objcgradle" version "0.6.0-alpha"
//    finalConfigure():
//    https://github.com/j2objc-contrib/j2objc-gradle/blob/master/FAQ.md#how-do-i-call-finalconfigure

/*
    JavaFX Port Mobile
 */
//    id "me.tatarka.retrolambda" version "3.3.0"

}

//apply plugin: "com.github.j2objccontrib.j2objcgradle"

/*
Node.js All script minify
 */
// http://stackoverflow.com/questions/36978782/gradle-minify-all-javascript
// https://docs.gradle.org/current/userguide/working_with_files.html
//
//import com.eriwen.gradle.js.tasks.MinifyJsTask
//
//// Declare your sources
//
//def jsSrcDir = "src/main/jsSrcDir"
//
//javascript.source {
//    dev {
//        js {
//            srcDir jsSrcDir
//            include "*.js"
//            exclude "*.min.js"
//        }
//    }
//    prod {
//        js {
//            srcDir jsSrcDir
//            include "*.min.js"
//        }
//    }
//}
//
//def dynamicTaskNames = []
//def dynamicTaskIndex = 1
//
//FileTree tree = fileTree(jsSrcDir) {
//    include "**/*.js"
//    exclude "**/*.css"
//    exclude "**/*.less"
//    exclude "**/*.sass"
//}
//
//tree.each { file ->
//    def dynamicTaskName = "minifiy${dynamicTaskIndex}_" + relativePath(file)
//
//    task "${dynamicTaskName}"(type: MinifyJsTask) {
//        def newfolder = "" + relativePath(file).substring(jsSrcDir.length(), (relativePath(file).length() - file.name.length()))
////        println("${buildDir}/javascript"+newfolder)
////        println(file.properties)
//        source = file.absolutePath
//        dest = "${buildDir}/min-closure.js" + newfolder + "min.${file.name}"
////        dest = file.parent + "/min.${file.name}"
//        // ** ALERT ** Turn it off if code not running.
////        closure.compilationLevel = "ADVANCED_OPTIMIZATIONS"
//        closure {
//            warningLevel = "QUIET"
//            compilerOptions.languageIn = "ECMASCRIPT6_STRICT" // or ECMASCRIPT6
//            compilerOptions.languageOut = "ECMASCRIPT5_STRICT"// Turn it off if code not running.
//        }
//
//    }
//
//    dynamicTaskNames << dynamicTaskName
//    dynamicTaskIndex++
//}
//
//task myMinify(dependsOn: dynamicTaskNames) {
//    println("jsScripts Minified.")
//}
//
//// Declare your sources
//javascript.source {
//    dev {
//        js {
//            srcDir jsSrcDir
//            include "*.js"
//            exclude "*.min.js"
//        }
//    }
//    prod {
//        js {
//            srcDir jsSrcDir
//            include "*.min.js"
//        }
//    }
//}


apply plugin: "base"
apply plugin: "java"
apply plugin: "maven"
apply plugin: "scala"
apply plugin: "git-repo"
apply plugin: "antlr"
apply plugin: "net.serenity-bdd.aggregator"
apply plugin: "nebula.dependency-lock"
apply plugin: "org.ajoberstar.github-pages"
//apply plugin: 'add.proguard'
// apply plugin: 'scalajs-plugin'

//apply plugin: "war" // Support Web Application Archive
//apply plugin: "org.javafxports.jfxmobile"
//apply plugin: "nebula.ospackage" // Support RPM package

// Pick IDE appropriate for you

/*
     Golang Support
    https://github.com/go-lang-plugin-org/go-lang-idea-plugin
    https://plugins.jetbrains.com/plugin/5047?pr=idea
*/

apply plugin: "idea"
idea {
    module {
        downloadJavadoc = true //false //
        downloadSources = true //false //
    }
}

//apply plugin: "eclipse"
//eclipse {
//    classpath {
//        downloadSources = true
//        downloadJavadoc = true
//    }
//}

/*
Big Jar setup
 */
jar {
    baseName = "TestNG-Projects"
    version = "1.3.0-SNAPSHOT"
}

repositories {
    maven { url "http://central.maven.org/" }
//    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url "http://repo1.maven.org/maven2/" }
    maven { url "http://conjars.org/repo" }
    maven { url "https://maven.itm.uni-luebeck.de/content/repositories/snapshots" }
    maven { url "https://jitpack.io" }
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    flatDir { dirs 'libs/LeapSDK/lib' }
}

/*
 [Exclusion]
  This section is to resolve slf4j and log4j"s StackOverFlow Exception
  REF: http://buransky.com/programming/exclude-log4j-to-use-slf4j-with-logback-in-a-gradle-project/
 */
//noinspection GroovyAssignabilityCheck
def excludes = configurations.all {
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "org.slf4j", module: "slf4j-simple"
//    exclude group: "ch.qos.logback", module: "logback-classic"
    exclude group: "log4j", module: "log4j"
    exclude group: "org.bytedeco", module: "javacpp-presets"
    exclude group: "org.apache.logging.log4j", module: "log4j-slf4j-impl"
//    exclude group: "org.eclipse.jetty", module: "jetty-server"
    exclude group: "org.eclipse.jetty.aggregate", module: "jetty-all"
    // TODO : jetty-all-7.6.0 ? makes Spring Boot Crashes.
    exclude group: "org.eclipse.jetty", module: "jetty-webapp"
    exclude group: "org.eclipse.sisu", module: "space.SisuIndexAPT6"
    exclude group: "org.apache.calcite", module: "calcite-avatica"
}
excludes

apply plugin: "org.junit.platform.gradle.plugin"
compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += "-parameters"
}

compileTestScala {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += "-parameters"
}

/*
 [JUNIT] In this section you configure JUnit5 Platform Support
 */

junitPlatform {
    platformVersion "1.0.0-M3"
    enableStandardTestTask true
    reportsDir file('build/test-results/junit-platform')
    enableStandardTestTask true
}


ext.junit4Version = "4.12"
ext.junitVintageVersion = "4.12.0-M2"
ext.junitPlatformVersion = "1.0.0-M3"
ext.junitJupiterVersion = "5.0.0-M3"
ext.log4JVersion = "2.7"

/*
 [Dependencies] In this section you declare the dependencies for your production and test code
*/

dependencies {
    // For JavaFX Support -- Mobile Applications
    // https://bitbucket.org/javafxports/javafxmobile-plugin
    compile "org.javafxports:ios-sdk:8.60.7"
    compile "org.javafxports:dalvik-sdk:8.60.7"
    compile "org.javafxports:jfxdvk:8.60.7"
    // TODO Need more time to configure this.
    // compile "org.robovm:robovm-dist:1.14.0"
    // compile "org.robovm:robovm-rt-android:1.14.0"

    // For Spring Boot
    // Error :java.lang.NoClassDefFoundError: ch/qos/logback/classic/turbo/TurboFilter
    compile "ch.qos.logback:logback-classic:1.1.7"
    testCompile("ch.qos.logback:logback-classic:1.1.7") { force = true }

    // Github as dependency Example
//    compile "com.github.User:Repo:Tag"
//    compile "com.github.graalvm:fastr:graal-vm-0.13"

    // Apache Tika Support ( Image meta file. for GMAP)
    compile "org.apache.tika:tika:1.14"
    compile "org.apache.tika:tika-core:1.14"
////    compile "org.apache.tika:tika-parent:1.14"
//    compile "org.apache.tika:tika-parsers:1.14"
//    compile "org.apache.tika:tika-app:1.14"
//    compile "org.apache.tika:tika-xmp:1.14"
//
//    runtime "org.apache.tika:tika-core:1.14"
//    runtime 'org.apache.tika:tika-parsers:1.14'

    // Vaadin U & I Framework
// https://mvnrepository.com/artifact/com.vaadin/vaadin-client
    compile group: 'com.vaadin', name: 'vaadin-client', version: '7.7.5'
//    compile "com.vaadin:vaadin:7.0.0.alpha3"
// https://mvnrepository.com/artifact/com.vaadin/vaadin-themes
    compile group: 'com.vaadin', name: 'vaadin-themes', version: '7.7.5'
// https://mvnrepository.com/artifact/com.vaadin/vaadin-server
    compile group: 'com.vaadin', name: 'vaadin-server', version: '7.7.5'
// https://mvnrepository.com/artifact/com.vaadin/vaadin-spring
    compile group: 'com.vaadin', name: 'vaadin-spring', version: '1.1.1'

    // VertX for Web design
    // https://mvnrepository.com/artifact/io.vertx/vertx-core
    compile group: 'io.vertx', name: 'vertx-core', version: '3.3.3'

    // JSON, YAML support
    def jackson = "2.8.5"
    compile "com.fasterxml.jackson.core:jackson-core:${jackson}" // YAML or JSON format
    compile "com.fasterxml.jackson.core:jackson-databind:${jackson}" // YAML or JSON format
    compile "com.fasterxml.jackson.core:jackson-annotations:${jackson}" // YAML or JSON format

    // Antlr Support
    antlr "org.antlr:antlr4:4.5.3" // use ANTLR version 4

    // For Selenium Development : Automation Web Browser Automation Test
    def SeleniumWebDrivers = "3.0.0-beta3"
    def SeleniumMobileDrivers = "2.9.0"

//    compile "org.seleniumhq.selenium:selenium:2.0rc2"
    compile "org.seleniumhq.selenium:selenium-java:${SeleniumWebDrivers}"
    compile "org.seleniumhq.selenium:selenium-server:${SeleniumWebDrivers}"

    compile "org.seleniumhq.selenium:selenium-remote-driver:${SeleniumWebDrivers}"
    compile "org.seleniumhq.selenium:selenium-firefox-driver:${SeleniumWebDrivers}"

    compile "org.seleniumhq.selenium:selenium-support:${SeleniumWebDrivers}"
    compile "org.seleniumhq.selenium:selenium-ie-driver:${SeleniumWebDrivers}"
    compile "org.seleniumhq.selenium:selenium-chrome-driver:${SeleniumWebDrivers}"
    compile "org.seleniumhq.selenium:selenium-safari-driver:${SeleniumWebDrivers}"
    compile "org.seleniumhq.selenium:selenium-edge-driver:${SeleniumWebDrivers}"

    compile "org.seleniumhq.selenium:selenium-iphone-driver:${SeleniumMobileDrivers}"
    compile "org.seleniumhq.selenium:selenium-android-driver:${SeleniumMobileDrivers}"
    compile "org.seleniumhq.selenium:selenium-htmlunit-driver:${SeleniumMobileDrivers}"

    // Headless web test || GhostDriver
    compile "com.machinepublishers:jbrowserdriver:0.16.4"
//    compile "org.jboss.arquillian.extension:arquillian-phantom-driver:1.2.1.Final"
    compile "com.codeborne:phantomjsdriver:1.3.0"
    compile "com.machinepublishers:jbrowserdriver:0.17.1"
//    compile "org.jboss.arquillian.extension:2.1.1"

    // MySQL Connector support
    compile "mysql:mysql-connector-java:6.0.3"

//     def SpringVer = "1.4.1.RELEASE"
//     compile "org.springframework.boot:spring-boot-starter:${SpringVer}"
//     compile("org.springframework.boot:spring-boot-starter-web:${SpringVer}")
//             {
//                 exclude group: "org.springframework.boot", module: "spring-boot-starter-jetty"
//             }
//     compile "org.springframework.boot:spring-boot-starter-data-jpa:${SpringVer}"
//     testCompile "org.springframework.boot:spring-boot-starter-test:${SpringVer}"

// //    compile "org.springframework.boot:spring-boot:${SpringVer}"
// //    compile "org.springframework.boot:spring-boot-starter-thymeleaf:${SpringVer}"
// //    compile "org.springframework.boot:spring-boot-starter-security:${SpringVer}"
// //    compile "org.springframework.boot:spring-boot-configuration-processor:${SpringVer}"
// //    compile "org.springframework.boot:spring-boot-starter-jetty:${SpringVer}"
// //    compile "org.springframework.boot:spring-boot-starter-actuator:${SpringVer}"

// //    def SpringFullVer = "4.3.2.RELEASE"
// //    compile "org.springframework:spring-core:${SpringFullVer}"
// //    compile "org.springframework:spring-context:${SpringFullVer}"
// //    compile "org.springframework:spring-orm:${SpringFullVer}"
// //    compile "org.springframework.data:spring-data-solr:2.0.2.RELEASE"
// //    compile "org.springframework.data:spring-data-hadoop:2.4.0.RELEASE"

    def SpringVer = "2.0.0.BUILD-SNAPSHOT"

    //http://repo.spring.io/snapshot/org/springframework/data/
    //https://github.com/spring-projects/spring-data-examples/tree/master/rest/multi-store

    compile "org.springframework.boot:spring-boot-starter:${SpringVer}"
    compile("org.springframework.boot:spring-boot-starter-web:${SpringVer}")
    // {exclude group: "org.springframework.boot", module: "spring-boot-starter-jetty"}
    // compile("org.springframework.boot:spring-boot-starter-web")
    compile "org.springframework.boot:spring-boot-starter-data-jpa:${SpringVer}"
    compile "org.springframework.boot:spring-boot-starter-parent:${SpringVer}"

    testCompile "org.springframework.boot:spring-boot-starter-test:${SpringVer}"
    testCompile "org.springframework.boot:spring-boot-starter-parent:${SpringVer}"

    compile "org.springframework.boot:spring-boot:${SpringVer}"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:${SpringVer}"
    compile "org.springframework.boot:spring-boot-starter-security:${SpringVer}"
    compile "org.springframework.boot:spring-boot-configuration-processor:${SpringVer}"
    compile "org.springframework.boot:spring-boot-starter-jetty:${SpringVer}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${SpringVer}"

    def SpringFullVer = "5.0.0.BUILD-SNAPSHOT"
    compile "org.springframework:spring-test:${SpringFullVer}"
    compile "org.springframework:spring-core:${SpringFullVer}"
    compile "org.springframework:spring-beans:${SpringFullVer}"
    compile "org.springframework:spring-context:${SpringFullVer}"

//     compile "org.springframework:spring-expression:${SpringFullVer}"
//     compile "org.springframework:spring-tx:${SpringFullVer}"
//     compile "org.springframework:spring-oxm:${SpringFullVer}"
//     compile "org.springframework:spring-web:${SpringFullVer}"
//     compile "org.springframework:spring-webmvc:${SpringFullVer}"
//     compile "org.springframework:spring-web-reactive:${SpringFullVer}"
//     compile "org.springframework:spring-orm:${SpringFullVer}"
//     compile "org.springframework.data:spring-data-commons:${SpringFullVer}"
//     compile "org.springframework.data:spring-data-commons-dist:1.5.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-commons-core:1.5.0.BUILD-SNAPSHOT"

//     compile "org.springframework.data:spring-data-rest-parent:3.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-rest-core:3.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-rest-webmvc:3.0.0.BUILD-SNAPSHOT"

//     compile "org.springframework.data:spring-data-commons:${SpringFullVer}"
//     compile "org.springframework.data:spring-data-ldap:1.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-neo4j:5.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-solr:3.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-hadoop:2.4.0.BUILD-SNAPSHOT"
//     compile "org.springframework.data:spring-data-keyvalue:${SpringVer}"
//     compile "org.springframework.data:spring-data-cassandra-parent:${SpringVer}"
//     compile "org.springframework.data:spring-data-mongodb-parent:${SpringVer}"
//     compile "org.springframework.data:spring-data-redis:${SpringVer}"
//     compile "org.springframework.data:spring-data-oracle:${SpringVer}"
//     compile "org.springframework.data:spring-data-jpa:${SpringVer}"
// //    compile "org.springframework.social:spring-social:2.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.statemachine:spring-statemachine-boot:1.2.0.BUILD-SNAPSHOT"
//     compile "org.springframework.shell:spring-shell:1.2.0.BUILD-SNAPSHOT"
//     compile "org.springframework:spring-websocket:5.0.0.BUILD-SNAPSHOT"
//     compile "org.springframework.webflow:spring-webflow:2.4.5.BUILD-SNAPSHOT"

    // For HTTP2 Servers
    // http://unrestful.io/2015/10/10/http2-java-client-examples.html
    compile "io.netty:netty-all:5.0.0.Alpha2"
    def jettyVer = "9.4.0.M1"
    compile "org.eclipse.jetty:jetty-server:${jettyVer}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyVer}"
    compile "org.eclipse.jetty:jetty-util:${jettyVer}"
    compile "org.eclipse.jetty:jetty-http:${jettyVer}"
    compile "javax.servlet:javax.servlet-api:4.0.0-b01"
    // Turn next line on for Spring-Boot Embedded Jetty , off to use Tomcat with Spring.
//    compile "org.eclipse.jetty:jetty-webapp:${jettyVer}"

    // For Hadoop Basic Development Environment
//    def HadoopVer = "2.7.3"
    def HadoopVer = '3.0.0-alpha1'
    compile "org.apache.hadoop:hadoop-main:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-common:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-client:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-hdfs:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-annotations:${HadoopVer}"
//    compile "org.apache.hadoop:hadoop-core:1.2.1"
//    compile "org.apache.hadoop:hadoop-tools:1.2.1" // Dist-cp support

    // For Hadoop MapReduce Development Environment
    compile "org.apache.hadoop:hadoop-mapreduce-client-core:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-mapreduce-client-common:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-mapreduce-client-jobclient:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-mapreduce-client-app:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-mapreduce-client-shuffle:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-mapreduce-client-hs:${HadoopVer}" // MapReduce History Storage
    compile "org.apache.hadoop:hadoop-streaming:${HadoopVer}" // MapReduce Streaming

    // For Hadoop YARN Development Environment
    compile "org.apache.hadoop:hadoop-yarn-common:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-api:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-server-common:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-client:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-server-web-proxy:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-server-nodemanager:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-server-resourcemanager:${HadoopVer}"

    // For Hadoop Auth Security Development Environment
    compile "org.apache.hadoop:hadoop-auth:${HadoopVer}"

    // Mini Cluster for Hadoop Test
    compile "org.apache.hadoop:hadoop-minicluster:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-yarn-server-tests:${HadoopVer}"
    compile "org.apache.hadoop:hadoop-test:1.2.1"
    //http://attic.apache.org/projects/mrunit.html
    //compile "org.apache.mrunit:mrunit:1.1.0:hadoop2"

    // Cassandra
    // TODO : One of these makes Spring Boot/Tomcat crashes.
//    compile "org.apache.cassandra:cassandra-all:3.7"
//    compile "com.datastax.spark:spark-cassandra-connector_2.10:1.6.0"
//    compile "com.datastax.cassandra:cassandra-driver-core:3.0.3"

    // For ZooKeeper Development
    compile "org.apache.zookeeper:zookeeper:3.4.8"

    // For Spark Development
    def SparkVer = "2.0.0"
    compile "org.apache.spark:spark-core_2.11:${SparkVer}"
    compile "org.apache.spark:spark-sql_2.11:${SparkVer}"
    compile "org.apache.spark:spark-mllib_2.11:${SparkVer}"
    compile "org.apache.spark:spark-streaming_2.11:${SparkVer}"

    compile "org.apache.spark:spark-hive_2.11:${SparkVer}"
    compile "org.apache.spark:spark-repl_2.11:${SparkVer}"
    compile "org.apache.spark:spark-unsafe_2.11:${SparkVer}"
    compile "org.apache.spark:spark-yarn_2.11:${SparkVer}"
    compile "org.apache.spark:spark-graphx_2.11:${SparkVer}"

    compile "org.apache.spark:spark-tags_2.11:${SparkVer}"

    def SparkVerOld = "1.6.2"
    compile "org.apache.spark:spark-test-tags_2.11:${SparkVerOld}"
    compile "org.apache.spark:spark-streaming-twitter_2.11:${SparkVerOld}"
    compile "org.apache.spark:spark-streaming-kafka_2.11:${SparkVerOld}"
    compile "org.apache.spark:spark-bagel_2.11:${SparkVerOld}"

    // ZeroMQ vs Kafka vs RabbitMQ
    // https://tomasz.janczuk.org/2015/09/from-kafka-to-zeromq-for-log-aggregation.html
    // http://stackoverflow.com/questions/731233/activemq-or-rabbitmq-or-zeromq-or

    // For Bitcoin in Java
    compile "org.bitcoinj:bitcoinj-core:0.14.3"

    // For Apache TinkerPop
    compile "org.apache.tinkerpop:hadoop-gremlin:3.2.2"

    // For CoAP in IOT //  Java CoAP implementation
    // http://www.win.tue.nl/~lrahman/iot/files/LeshanTutorial.pdf
    // http://stackoverflow.com/questions/30424457/what-are-the-major-differences-between-http-and-coap
    compile "org.eclipse.californium:californium-core:2.0.0-M1"
//    compile "de.uzl.itm:ncoap-core:1.8.3-SNAPSHOT"
    compile "org.eclipse.leshan:leshan-all:0.1.11-M12"

    // Google Zxing QRCode Generator
    compile "com.google.zxing:zxing-parent:3.2.1"
    compile "com.google.zxing:javase:3.2.1"

    // For Spark Unit Test with SparkHive
    // https://repo.jfrog.org/artifactory/libs-release-bintray/com/holdenkarau/spark-testing-base_2.11/
    compile "com.holdenkarau:spark-testing-base_2.11:2.0.0_0.4.7"

    // For Mesos Development
    compile "org.apache.mesos:mesos:1.1.0"
    compile "com.mesosphere.mesos.rx.java:mesos-rxjava:0.1.0"

    // For MS Document Process
    compile "org.apache.poi:poi:3.16-beta1"
    compile "org.apache.poi:poi-ooxml:3.16-beta1"
    compile "org.apache.poi:poi-scratchpad:3.16-beta1"

    // For Data Flow
    compile "org.apache.nifi:nifi:1.0.0-BETA"

    // For Deep Learning (ND4J,DL4J)
    // http://deeplearning4j.org/
    // http://nd4j.org/
    def deep4jVer = "0.7.1"
    compile "org.deeplearning4j:deeplearning4j-parent:${deep4jVer}"
    compile "org.deeplearning4j:deeplearning4j-core:${deep4jVer}"
    compile "org.nd4j:nd4j-native-platform:${deep4jVer}"

    // For OpenCV Related & Computer Vision
    // OpenPNP http://openpnp.org/
    compile "org.openpnp:opencv:2.4.11-2"
    // ByteDeco http://bytedeco.org/
    // https://mvnrepository.com/artifact/org.bytedeco.javacpp-presets/opencv
    compile "org.bytedeco.javacpp-presets:opencv:3.1.0-1.2"
    compile "org.bytedeco:javacpp-presets:1.3"

    // For Audio/Video Processing
    // For Web Conference https://jitsi.org/
    compile "org.jitsi:jitsi-universe-public:1.0.2"

    // For Game Development https://libgdx.badlogicgames.com/
    // For libGDX
    compile "com.badlogicgames.gdx:gdx:1.9.4"
    compile "com.badlogicgames.gdx:gdx-platform:1.9.4"
    compile "com.badlogicgames.gdx:gdx-backend-moe:1.9.4"

    // MOE SUPPORT
//- Gradle Core Plugins (not a core plugin, please see https://docs.gradle.org/3.2.1/userguide/standard_plugins.html for available core plugins)
//- Gradle Central Plugin Repository (no 'moe-plugin-gradle' plugin available - see following link for available plugins)
// https://plugins.gradle.org
//    compile "com.github.multi-os-engine:moe-plugin-gradle:moe-1.2.3"

    // JMonkey3
    def jMonkeyVer = "3.1.0-beta1"
    // For JMonkey3 Game Development
    // https://jmonkeyengine.github.io/wiki/jme3/maven.html#gradle
    // http://docs.jmonkeyengine.org/jme3/virtualreality.html
    compile "org.jmonkeyengine:jme3-core:${jMonkeyVer}"
    runtime "org.jmonkeyengine:jme3-desktop:${jMonkeyVer}"
    runtime "org.jmonkeyengine:jme3-lwjgl:${jMonkeyVer}"

    // For Virtual Reality / Oculus Rift
    // http://jogamp.org/jogl/www/
    compile "org.jogamp.jogl:oculusvr:2.3.2"

    // For Virtual Reality /Leap Motion
//    compile "com.leapmotion.leap:leapMotion:3.1"
//    runtime files('libs/LeapSDK/lib/LeapJava.jar)

    runtime fileTree(dir: 'libs/LeapSDK/lib', include: { '**/*.jar'; '**/*.dylib' })
    compile fileTree(dir: 'libs/LeapSDK/lib', include: { '**/*.jar'; '**/*.dylib' })
    testCompile fileTree(dir: 'libs/LeapSDK/lib', include: { '**/*.jar'; '**/*.dylib' })

    // For Geo Location Integration
    compile "com.gluonhq:maps:1.0.0"

    // For Apache Commons Net and Email
    compile "commons-net:commons-net:3.5"
    compile "org.apache.commons:commons-email:1.4"
    compile "commons-io:commons-io:2.5"
//    compile "org.apache.commons:commons-Imaging:1.0-SNAPSHOT"
    compile "org.apache.commons:commons-collections4:4.1"

    // For Time and Date (Joda-Time)
    compile "joda-time:joda-time:2.9.4"

    // For H2 Datbase http://www.h2database.com/html/main.html
    compile "com.h2database:h2:1.4.192"

    // C10K Problem
    // https://en.wikipedia.org/wiki/C10k_problem
    // https://news.ycombinator.com/item?id=5127251
    // http://shenfeng.me/600k-concurrent-connection-http-kit.html

    // For Apache Camel
    def CamelVer = "2.18.1"
    compile "org.apache.camel:camel-core:${CamelVer}"
    compile "org.apache.camel:camel-cdi:${CamelVer}"
    compile "org.apache.camel:camel-test:${CamelVer}"
    compile "org.apache.camel:camel-spring-boot:${CamelVer}"
    compile "org.apache.camel:camel-jetty:${CamelVer}"
    compile "org.apache.camel:camel-xstream:${CamelVer}"
//    compile "org.apache.camel:camel-jackson:${CamelVer}"
    compile "org.apache.camel:camel-mail:${CamelVer}"

    // For HTML Parser (Jsoup)
    compile "org.jsoup:jsoup:1.10.1"

    // For Hibernate
    compile "org.hibernate:hibernate-core:5.2.2.Final"

    // For Arquillian Test ( http://arquillian.org/modules/core-platform/ )
    testCompile "org.jboss.arquillian:arquillian-bom:1.1.11.Final"
    testCompile "org.jboss.shrinkwrap:shrinkwrap-bom:1.2.6"

    // For Arquillian Cube ( Docker or Kubernetes Testing , http://arquillian.org/blog/2016/08/18/arquillian-cube-1-0-0-Alpha14/ )
    testCompile "org.arquillian.cube:arquillian-cube-requirement:1.0.0.Alpha14"
    testCompile "org.arquillian.extension:arquillian-recorder:1.1.2.Final"
    testCompile "org.arquillian.spacelift:arquillian-spacelift:1.0.0.Alpha8"

    // Support Serenity BDD
    testCompile "net.serenity-bdd:serenity-core:1.1.42"
    testCompile "net.serenity-bdd:serenity-junit:1.1.42"
    testCompile "org.assertj:assertj-core:3.5.2"
//    testCompile "org.slf4j:slf4j-simple:1.7.7"

    // Support Cucumber
    // https://cucumber.io/docs/reference/jvm#java
    testCompile "info.cukes:cucumber-java8:1.2.4"
    testCompile "info.cukes:cucumber-java:1.2.4"
    testCompile "info.cukes:cucumber-scala_2.12:1.2.4"
    testCompile "info.cukes:cucumber-testng:1.2.4"
    testCompile "info.cukes:cucumber-junit:1.2.4"

    // The production code uses the SLF4J logging API at compile time
    // "format ||  <groupId> :<artifactId> :<version> "
    compile "org.slf4j:slf4j-api:1.7.21"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile "org.testng:testng:6.9.12" and add
    // "test.useTestNG()" to your build script.

    testCompile "org.testng:testng:6.9.12"
    //    testCompile "com.google.inject:guice:4.1.0"

    //    testCompile ("org.uncommons:reportng:1.1.4") {
    //        exclude group: "org.testng", module: "testng"
    //    }

    // JUnit Jupiter API and TestEngine implementation
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

    // Apache Log4J 2
    compile "org.apache.logging.log4j:log4j-api:${log4JVersion}" // Apache Log4J 2
    compile "org.apache.logging.log4j:log4j-core:${log4JVersion}" // Apache Log4J 2
    testRuntime "org.apache.logging.log4j:log4j-core:${log4JVersion}"
    testRuntime "org.apache.logging.log4j:log4j-jul:${log4JVersion}"

    /* Scala Support
    Configuring the Zinc compiler is not always required.
    https://docs.gradle.org/current/userguide/scala_plugin.html

    The Scala compiler ignores Gradle"s targetCompatibility and sourceCompatibility settings.
    In Scala 2.11, the Scala compiler always compiles to Java 6 compatible bytecode.
    In Scala 2.12, the Scala compiler always compiles to Java 8 compatible bytecode.
    If you also have Java sources, you can follow the same steps as for the Java plugin
    to ensure the correct Java compiler is used.
     */


    compile "org.scala-lang:scalap:2.12.1"
    compile "org.scala-lang:scala-library-all:2.12.1" // for scala 2.12
    testCompile "org.scalatest:scalatest-app_2.12.0-M5:3.0.0"
    testCompile "org.scala-lang:scala-library-all:2.12.0-M5" // for scala 2.12
    testCompile "org.scalatest:scalatest_2.12:3.0.1"
    testRuntime "org.pegdown:pegdown:1.6.0"

    /* Scalajs Support
    https://github.com/gtache/scalajs-gradle
    http://repo1.maven.org/maven2/org/scala-js/
   */
    // def scalajsVer = "0.6.13"
    // compile "org.scala-js:scalajs-library_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-compiler_2.12.1:${scalajsVer}"
    // compile "org.scala-js:scalajs-javalib-ex_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-compiler_2.12.1:${scalajsVer}"
    // compile "org.scala-js:scalajs-test-interface_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-ir_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-ir_sjs0.6_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-tools_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-stubs_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-sbt-test-adapter_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-js-envs_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-js-envs-test-kit_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-java-time_sjs0.6_2.12:0.2.0"
    // compile "org.scala-js:scalajs-java-logging_sjs0.6_2.12:0.1.0"
    // compile "org.scala-js:scalajs-dom_sjs0.6_2.12.0-M4:0.9.1:"
    // compile "org.scala-js:scalajs-cli_2.11:0.6.9"
    // compile "org.scala-js:scalajs-tools_sjs0.6_2.12:${scalajsVer}"

    // TODO There is bug for integrating junit/selenium in scala-js
    // compile "org.scala-js:scalajs-junit-test-runtime_2.12:${scalajsVer}"
    // compile "org.scala-js:scalajs-junit-test-plugin_2.12.1:${scalajsVer}"
    // compile "org.scala-js:scala-junit-mixin-plugin_2.12.0-M5:0.1.0:"
    // compile "org.scala-js:seleniumjsenv_2.12.0-M3:0.1.0"
    // compile "org.scala-js:scalajs-env-selenium_2.12.0-M4:0.1.3"
    // compile "org.eclipse.jetty:jetty-server:8.1.16.v20140903"
    // compile "org.eclipse.jetty:jetty-websocket:8.1.16.v20140903"

    // For Kafka Development
    def KafkaVer = "0.10.0.1"
    compile "org.apache.kafka:kafka_2.11:$KafkaVer"
    compile "org.apache.kafka:kafka-streams:$KafkaVer"
    compile "org.apache.kafka:kafka-examples:$KafkaVer"
    compile "org.apache.kafka:kafka-tools:$KafkaVer"
    compile "org.apache.kafka:kafka-log4j-appender:$KafkaVer"
    compile "org.apache.kafka:kafka-clients:$KafkaVer"
    compile "org.apache.kafka:connect-api:$KafkaVer"
    compile "org.apache.kafka:connect-json:$KafkaVer"
    compile "org.apache.kafka:connect-file:$KafkaVer"
    compile "org.apache.kafka:connect-runtime:$KafkaVer"
    compile "org.apache.kafka:kafka-streams-examples:$KafkaVer"

    ext.KafkaVerOld = "0.8.2.2"
    compile "org.apache.kafka:kafka-hadoop-producer:$KafkaVerOld"
    compile "org.apache.kafka:kafka-hadoop-consumer:$KafkaVerOld"
    compile "org.apache.kafka:kafka-java-examples:0.8.0"

    // For PDF Support
    compile "org.apache.pdfbox:pdfbox:2.0.2" // PDF
    compile "com.itextpdf:itextpdf:5.5.9" // HTML to PDF

    // PDF to HTML  //https://github.com/coolwanglu/pdf2htmlEX

    // Data Storage : Schema evolution
    //https://docs.oracle.com/cd/E26161_02/html/GettingStartedGuide/schemaevolution.html

    // For JSON to Java Object (Gson)
    compile "com.google.code.gson:gson:2.7"

    // For Avro Support
    //https://github.com/miguno/avro-cli-examples
    compile "org.apache.avro:avro:1.8.1"

    // For Optimized Row Colomun Storage
    def apachORCVer = "1.2.2"
    compile "org.apache.orc:orc:${apachORCVer}"
    compile "org.apache.orc:orc-core:${apachORCVer}"
    compile "org.apache.orc:orc-tools:${apachORCVer}"
    compile "org.apache.orc:orc-mapreduce:${apachORCVer}"

    // For Parquet Support
    compile "com.twitter:parquet-format:2.2.0"

    // For Hive 2.0
    def HiveVer = "2.1.0"
    compile "org.apache.hive:hive-exec:${HiveVer}"
    compile "org.apache.hive:hive-orc:${HiveVer}"
    compile "org.apache.hive:hive-serde:${HiveVer}"
    compile "org.apache.hive:hive-metastore:${HiveVer}"
    compile "org.apache.hive:hive-service:${HiveVer}"

    // For Ignite Support
    def IgniteVer = "1.7.0"
    compile "org.apache.ignite:ignite-core:${IgniteVer}"
    compile "org.apache.ignite:ignite-mesos:${IgniteVer}"
    compile "org.apache.ignite:ignite-spring:${IgniteVer}"
    compile "org.apache.ignite:ignite-tools:${IgniteVer}"
    compile "org.apache.ignite:ignite-rest-http:${IgniteVer}"
    compile "org.apache.ignite:ignite-spark:${IgniteVer}"
    compile "org.apache.ignite:ignite-kafka:${IgniteVer}"
    compile "org.apache.ignite:ignite-camel:${IgniteVer}"
    compile "org.apache.ignite:ignite-clients:${IgniteVer}"

    compile "org.apache.ignite:ignite-examples:1.0.0-RC3"
    compile "org.apache.ignite:ignite-codegen:1.0.0-RC3"

    // For ASM Core, Bytecode comparison
    compile "org.ow2.asm:asm-all:6.0_ALPHA"
    compile "org.ow2.asm:asm-debug-all:6.0_ALPHA"
    compile "org.ow2.asm:asm-analysis:6.0_ALPHA"

    // Google Guava Library
    def guavaVer = "20.0"
    compile "com.google.guava:guava:${guavaVer}"
    compile "com.google.guava:guava-parent:${guavaVer}"
    compile "com.google.guava:guava-gwt:${guavaVer}"
    compile "com.google.guava:guava-tests:${guavaVer}"
    compile "com.google.guava:guava-testlib:${guavaVer}"
    compile "com.google.j2objc:j2objc-annotations:1.1"

    // Google Guice for Dependency Injection
    def guiceVer = "4.1.0"
    compile "com.google.inject:guice:${guiceVer}" // Core
    compile "com.google.inject:guice-parent:${guiceVer}"
    compile "com.google.inject:guice-bom:${guiceVer}"
    compile "com.google.inject:jdk8-tests:${guiceVer}"

    // Twitter Utilities
    compile "com.twitter:util-core_2.11:6.34.0"

    // JWT Web Token support
    compile "io.jsonwebtoken:jjwt:0.7.0"

    //https://orc.apache.org/
//    compile "com.typesafe.zinc:zinc:0.3.11"
//    testCompile "com.typesafe.zinc:zinc:0.3.11"
//    zinc "com.typesafe.zinc:zinc:0.3.11"

    //https://mvnrepository.com/open-source
}

/*
    Scala Support
 */
// https://docs.gradle.org/current/userguide/scala_plugin.html
// Compiling in external process
tasks.withType(ScalaCompile) {
//    scalaCompileOptions.with {
//        force = true
//    }
    configure(scalaCompileOptions.forkOptions) {
        memoryMaximumSize = "1g"
    }
}

//setting custom max heap size and extra arguments for ANTLR
generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]
}

/*
    Apply Plugin for JavaSE RunTime Support
    Automatic restart using Spring-Boot
 */

// Gradle Chap50 : https://docs.gradle.org/current/userguide/application_plugin.html
apply plugin: "application"
apply plugin: "org.springframework.boot"
// apply plugin: "spring-boot"
bootRun {
    addResources = true
}

bootRepackage {
    mainClassName = "org.raliclo.JavaSEApplication"
}
/*
Software Test : Junit & TestNG
 */
test {
    // set heap size for the test JVM(s)
    minHeapSize = "128m"
//    maxHeapSize = "1024m" //default 512m
    maxHeapSize = "4096m"
    forkEvery = 1 // prevent Java OOM error on over 1 GB of mem usage
    /*
        [Test Logs]  Show that tests are run in the command-line output
        fLogging {
        events "started", "passed"
        }
     */
    testLogging.showStandardStreams = false // true // It will be automatic true if descriptor is customized.

    //Q:  TestNG vs JUNIT4 ?
    //A:  http://www.guru99.com/junit-vs-testng.html
    //Q:  JUnit5 ?
    //A:  http://junit.org/junit5/docs/current/user-guide/
    systemProperties "test-name": "TestName from build.gradle"

//     useJUnit()
    // enable TestNG support (default is JUnit)
    useTestNG() {
        // runlist to executed. path is relative to current folder
        // Specify suites here , if not or left empty here, all test will be excuted.

        // Here are three sample test Suites written in XML format
        // suites "src/test/java/intermediate_MultiThreadTest.xml"
        // suites "src/test/java/beginner.xml"
//         suites "src/test/java/all.xml"
    }

    //     set a system property for the test JVM(s)
    //    systemProperty "some.prop", "value"
    //
    //    // explicitly include or exclude tests
    //    include "org/foo/**"
    //    exclude "org/boo/**"

    // show standard out and standard error of the test JVM(s) on the console
    ignoreFailures = true

    /* Comment out for using customized descriptor in stdout

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
    logger.lifecycle("Running test: " + descriptor)
    }
    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
    logger.lifecycle("Test: " + descriptor + " produced standard out/err: \n" + event.message )
    }
     */
}

/*
Task Definitions
-Following are task definition examples.
-REF: https://docs.gradle.org/current/userguide/tutorial_gradle_command_line.html#N1014A
 */

task compile {
    println "\n[Info] Compiler started" // Emit additional message to :compile
}

// Compile / Test / Read report
task NGreport(type: Exec, dependsOn: [test]) {
//https://docs.gradle.org/current/dsl/org.gradle.api.tasks.Exec.html
    workingDir './'
    commandLine 'open'
    args './build/reports/tests/test/index.html'
    //store the output instead of printing to the console:
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

task runEasy(type: JavaExec) {
    mainClassName = "org.raliclo.JavaSEApplication"
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

task runCountSite(type: JavaExec) {
    mainClassName = "org.raliclo.WordCountWeb.RestAPI.Spring_WordCountSite"
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

task runCount(type: JavaExec) {
    mainClassName = "org.raliclo.WordCountWeb.RestAPI.dataApp.WordCountAvro"
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

// Example :
// gradle -PmainClass="org.raliclo.WordCountWeb.RestAPI.Spring_WordCountSite" execute
// gradle -PmainClass="LeapMotion.testLeap" execute

//task execute(type:JavaExec) {
//    main = mainClass
//    classpath = sourceSets.main.runtimeClasspath
//}

task runLeap(type: JavaExec) {
    mainClassName = "LeapMotion.leapTest"
    main = mainClassName
    systemProperty "java.library.path", "libs/LeapSDK/lib"
    classpath = sourceSets.main.runtimeClasspath
}

//gradleVersion = 3.0
//useMavenLocal = true
//// task to add gradle wrapper files.
//task("wrapper", type: Wrapper) {
//    gradleVersion = project.gradleVersion
//    distributionUrl = "https://services.gradle.org/distributions/" +
//            "gradle-${gradleVersion}-all.zip"
//}

//gradle dist -x test ==> This will exclude [test]
//task dist(dependsOn: [compile, test]) << {
//    println "building the distribution"
//}

// gradle projects ===> List all Projects in Tree
// gradle tasks ===> List all tasks in Tree , same as tasks

// TASKSs for Game Development on JMonkey3

//
//task libDist(dependsOn: subprojects.build) << {
////    description "Builds and copies the engine binaries, sources and javadoc to build/libDist"
//    File libFolder = mkdir("$buildDir/libDist/lib")
//    File sourceFolder = mkdir("$buildDir/libDist/sources")
//    File javadocFolder = mkdir("$buildDir/libDist/javadoc")
//    subprojects.each {project ->
//        if(project.ext.mainClass == ""){
//            project.tasks.withType(Jar).each {archiveTask ->
//                if(archiveTask.classifier == "sources"){
//                    copy {
//                        from archiveTask.archivePath
//                        into sourceFolder
//                        rename {project.name + "-" + archiveTask.classifier +"."+ archiveTask.extension}
//                    }
//                } else if(archiveTask.classifier == "javadoc"){
//                    copy {
//                        from archiveTask.archivePath
//                        into javadocFolder
//                        rename {project.name + "-" + archiveTask.classifier +"."+ archiveTask.extension}
//                    }
//                } else{
//                    copy {
//                        from archiveTask.archivePath
//                        into libFolder
//                        rename {project.name + "." + archiveTask.extension}
//                    }
//                }
//            }
//        }
//    }
//}
//
//task createZipDistribution(type:Zip,dependsOn:["dist","libDist"], description:"Package the nightly zip distribution"){
//    archiveName "jME" + jmeFullVersion + ".zip"
//    into("/") {
//        from {"./dist"}
//    }
//    into("/sources") {
//        from {"$buildDir/libDist/sources"}
//    }
//}
//
//task copyLibs(type: Copy){
////    description "Copies the engine dependencies to build/libDist"
//    from {
//        subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
//    }
//
//    into "$buildDir/libDist/lib-ext" //buildDir.path + "/" + libsDirName + "/lib"
//}
//
////task dist(dependsOn: [":jme3-examples:dist", "mergedJavadoc"]){
////    description "Creates a jME3 examples distribution with all jme3 binaries, sources, javadoc and external libraries under ./dist"
////}
//task dist(dependsOn: ["mergedJavadoc"]){
//    description "Creates a jME3 examples distribution with all jme3 binaries, sources, javadoc and external libraries under ./dist"
//}
//
//task mergedJavadoc(type: Javadoc, description: "Creates Javadoc from all the projects.") {
//    title = "jMonkeyEngine3"
//    destinationDir = mkdir("dist/javadoc")
//
//    options.encoding = "UTF-8"
//
//    // Allows Javadoc to be generated on Java 8 despite doclint errors.
//    if (JavaVersion.current().isJava8Compatible()) {
//        options.addStringOption("Xdoclint:none", "-quiet")
//    }
//
//    options.overview = file("javadoc-overview.html")
//    // Note: The closures below are executed lazily.
//    source subprojects.collect {project ->
//        project.sourceSets*.allJava
//    }
////    classpath = files(subprojects.collect {project ->
////            project.sourceSets*.compileClasspath})
//    //    source {
//    //        subprojects*.sourceSets*.main*.allSource
//    //    }
//    classpath.from {
//        subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
//    }
//}
//
//task mergedSource(type: Copy){
//
//}
//
////task wrapper(type: Wrapper, description: "Creates and deploys the Gradle wrapper to the current directory.") {
////    gradleVersion = "2.13"
////}
//
//ext {
//    ndkCommandPath  = ""
//    ndkExists       = false
//}
//
//task configureAndroidNDK {
//    def ndkBuildFile = "ndk-build"
//    // if windows, use ndk-build.cmd instead
//    if (System.properties["os.name"].toLowerCase().contains("windows")) {
//        ndkBuildFile = "ndk-build.cmd"
//    }
//
//    // ndkPath is defined in the root project gradle.properties file
//    String ndkBuildPath = ndkPath + File.separator + ndkBuildFile
//    //Use the environment variable for the NDK location if defined
//    if (System.env.ANDROID_NDK != null) {
//        ndkBuildPath = System.env.ANDROID_NDK + File.separator + ndkBuildFile
//    }
//
//    if (new File(ndkBuildPath).exists()) {
//        ndkExists = true
//        ndkCommandPath = ndkBuildPath
//    }
//}

//xcodebuild {
//    version = "7.3.1"
//    target = "XCode-TARGET"
//    scheme = "Example"
//    configuration = "Test"
//    destination = ["iPhone 6s"]
//}

//j2objcConfig {
//    // Sets up libraries you depend on
//    autoConfigureDeps true
//    // Omit these two lines if you don"t configure your Xcode project with CocoaPods
//    xcodeProjectDir "../ios"  //  suggested directory name
//    xcodeTargetsIos "IOS-APP"  // greplace with your iOS targets
//    finalConfigure()          // Must be last call to configuration
//}
//

/*
 TODO [Low] Fix JavaFX Port Mobile

 */
// Google's Cloud Platform , Gradle App Engine , Gcloud plugin
//https://github.com/GoogleCloudPlatform/gradle-appengine-plugin
//apply plugin: 'appengine'
//apply plugin: 'com.google.gcloud-preview'

//gcloud {
//    configurations {
//        prod {
//            args project: "myProd", verbosity: "info"
//            deployArgs "http-port": "8888"
//            runArgs "admin-host": ":1995"
//            modules ":a", ":b"
//        }
//        test {
//            modules ":a", ":b"
//            runAsync true
//            args project: "myTest"
//            modules ":" // same as default behavior
//            descriptors "app.yaml" // same as default behavior
//        }
//        indexes {
//            modules ":a"
//            descriptors "index.yaml"
//        }
//    }
//}
/*
 JavaFX Support for Android / iOS
 http://docs.gluonhq.com/javafxports/
 TODO [Low] Fix JavaFX Port Mobile
*/
//jfxmobile {
//    ios {
//        forceLinkClasses = ["ensemble.**.*"]
//    }
//    android {
//        applicationPackage = "org.raliclo.JavaFX_Mobile"
//    }
//}

//generateGrammarSource {
//    maxHeapSize = "64m"
//    arguments += ["-visitor", "-long-messages"]
//}

//retrolambda {
//    jdk System.getenv("JAVA8_HOME")
//    oldJdk System.getenv("JAVA6_HOME")
//    oldJdk ""
//    javaVersion JavaVersion.VERSION_1_6
//    jvmArgs '-arg1', '-arg2'
//    defaultMethods false
//    incremental true
//}

/*
CI Solution Comparison : Jenkins vs. Travis CI vs. CircleCI
http://stackshare.io/stackups/travis-ci-vs-circleci-vs-jenkins
Jenkins has highest market share and deployed for large enterprise.
TODO Jenkins Support
 */

//apply plugin: "com.terrafolio.jenkins"
//
//jenkins {
//
//    servers {
//        testing {
//            url "https://ci.jenkins.io/"
//            secure true         // optional
//            username "testuser" // optional
//            password "testpass" // optional
//        }
//    }
//
//    templates {
//        build {
//            xml file("build-template.xml")
//        }
//    }
//    defaultServer servers.testing // optional
//    jobs {
//        test {
//            server servers.testing
//            definition {
//                name "Build ${project.name}" //optional
//                xml file("config.xml")
//            }
//        }
//    }
//}

//Chapter 70. Building native software
//https://docs.gradle.org/current/userguide/native_software.html#cppPlugin

/*
C / C++ / Assembler /Golang support
TODO Complete the configuration & Support
 */
//apply plugin: "c"
//apply plugin: "cpp"
//apply plugin: "assembler"
//apply plugin: "objective-cpp"
//apply plugin: "objective-c"
//
//model {
//    components {
////        platforms {
////            macOS {
////                architecture "x86_64"
////                operatingSystem "osx"
////            }
////        }
//        main(NativeExecutableSpec) {
////            targetPlatform macOS  // Error : Incubating.
//            sources {
//                c {
//                    source {
//                        srcDir "src/main/clang"
//                        include "**/*.c"
//                    }
//                    exportedHeaders {
//                        srcDir "src/include"
//                    }
//                }
//                cpp {
//                    source {
//                        srcDir "src/main/cpp"
//                        include "**/*.cpp"
//                    }
//                }
//
//                //https://docs.gradle.org/current/dsl/org.gradle.language.assembler.AssemblerSourceSet.html
//                //Note: This property is incubating and may change in a future version of Gradle.
//                asm {
//                    source {
//                        srcDirs "src/main/asm"
//                        include "**/*.s"
//                    }
//                }
//            }
//            binaries.all {
//                // Prerequsite : Know about "Preprocessor, source, compiler, linker , assembler "
//                //https://courses.cs.washington.edu/courses/cse378/97au/help/compilation.html
//                // Define a preprocessor macro for every binary
//                cppCompiler.define "NDEBUG"
//
//                // Define toolchain-specific source, compiler and linker, assembler options
//                if (toolChain in Gcc) {
//                    sources {
//                        platformAsm(AssemblerSourceSet) {
//                            source.srcDir "src/main/asm/gcc"
//                        }
//                    }
//                    assembler.args "-g"
//                    cppCompiler.args "-O2", "-fno-access-control"
//                    linker.args "-Xlinker", "-S"
//                }
//                if (toolChain in VisualCpp) {
//                    sources {
//                        platformAsm(AssemblerSourceSet) {
//                            source.srcDir "src/main/asm/visualcpp"
//                        }
//                    }
//                    assembler.args "/Zi"
//                    cppCompiler.args "/Zi"
//                    linker.args "/DEBUG"
//                }
//            }
//        }
//    }
//}

// FindBugs Plugin
//apply plugin: "findbugs"
//tasks.withType(FindBugs) {
//    reports {
//        xml.enabled false
//        html.enabled true
//        html.stylesheet resources.text.fromFile("config/xsl/findbugs-custom.xsl")
//    }
//}

/*  Karma Jasmine Support
    1) Old: http://stackoverflow.com/questions/32341673/automate-jasmine-test-in-gradle
    2) New: https://github.com/craigburke/karma-gradle
 */

//apply plugin: 'moe'
//
//moe {
//    proguardLevel 'platform'
//    xcode {
//        // boolean, indicates whether the Xcode project should be generated or not, defaults to true.
//        generateProject
//
//        // String, name of the main target.
//        mainTarget
//
//        // String, name of the test target.
//        testTarget
//
//        // String, product name of the main target.
//        mainProductName
//
//        // String, path to the main storyboard.
//        mainUIStoryboardPath
//
//        // String, path to launch screen storyboard/xib.
//        launchScreenFilePath
//
//        // String, path to launch image.
//        launchImagesSource
//
//        // String, value for the 'NSLocationWhenInUseUsageDescription' property.
//        locationWhenInUseUsageDescription
//
//        // String, path to the app icons.
//        appIconsSource
//
//        // String, organizations name (ex: My Company).
//        organizationName
//
//        // String, company identifier (ex: com.mycompany).
//        companyIdentifier
//
//        // String, the app's bundle ID (ex: com.mycompany.myapp).
//        bundleID
//
//        // String, package where the 'Main' class can be found (ex: com.mycompany.myapp).
//        packageName
//
//        // String, path to the main target's Info.plist.
//        infoPlistPath
//
//        // String, path to the test target's Info.plist.
//        testInfoPlistPath
//
//        // boolean, value for the 'UIApplicationExitsOnSuspend' property.
//        applicationExitOnSuspend
//
//        // String, value for the 'CFBundleShortVersionString' property.
//        bundleShortVersionString
//
//        // String, value for the 'CFBundleVersion' property.
//        bundleVersion
//
//        // String, the minimal system version the app requires (ex: 9.0).
//        deploymentTarget
//
//        // String, path to the Xcode project's directory.
//        xcodeProjectDirPath
//
//        // List, list of supported interface orientations.
//        // - UIInterfaceOrientationPortrait
//        // - UIInterfaceOrientationPortraitUpsideDown
//        // - UIInterfaceOrientationLandscapeLeft
//        // - UIInterfaceOrientationLandscapeRight
//        supportedInterfaceOrientations
//    }
//
//    signing {
//        // String, ID of the development team.
//        developmentTeam
//
//        // String, path to the provisioning profile.
//        provisioningProfile
//
//        // String, name of the signing identity
//        signingIdentity
//    }
//
//    packaging {
//        excludes = ['LICENSE', 'LICENSE.*']
//        exclude 'README.md' // Excludes the README.md file from the application.jar
//    }
//
//    resources {
//        // Enables resources from the source directory
//        enableResourcesFromSourceDirs = true
//
//        // Excludes all Java source files when copying from the source directory
//        resourcesFromSourceDirExcludes = ['**/*.java']
//    }
//    javaProcess {
//        jvmArgs '-Xmx4096m'
//    }
//
//}

// Simplify or Skip distZip/disTar unless necessary
apply plugin: 'distribution'
distZip.enabled = false
distTar.enabled = false
jar.enabled = false