format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test
compile options:
2 items
0 -> -deprecation
1 -> -unchecked
javac options:
10 items
0 -> -source
1 -> 1.8
2 -> -target
3 -> 1.8
4 -> -d
5 -> /Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test
6 -> -g
7 -> -proc:none
8 -> -XDuseUnsharedTable=true
9 -> -parameters
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
3 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> /Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test/ScalaTest/ShouldBeTest.class
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> /Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test/ScalaTest/SimpleTest.class
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> /Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test/ScalaTest/testNGTest.class
binary dependencies:
12 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.1/dd235d04037dc6f4b6090257872dd35359a563ce/scala-library-2.12.1.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest-app_2.12/3.2.0-SNAP4/74934b297e870aa7ce7621bc092236e0eb44bc01/scalatest-app_2.12-3.2.0-SNAP4.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.11/1fdd5e22f50b14f6d846163456e8c9a7657626fb/testng-6.11.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.1/dd235d04037dc6f4b6090257872dd35359a563ce/scala-library-2.12.1.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest-app_2.12/3.2.0-SNAP4/74934b297e870aa7ce7621bc092236e0eb44bc01/scalatest-app_2.12-3.2.0-SNAP4.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.11/1fdd5e22f50b14f6d846163456e8c9a7657626fb/testng-6.11.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.1/dd235d04037dc6f4b6090257872dd35359a563ce/scala-library-2.12.1.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest-app_2.12/3.2.0-SNAP4/74934b297e870aa7ce7621bc092236e0eb44bc01/scalatest-app_2.12-3.2.0-SNAP4.jar
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> /Users/raliclo/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.11/1fdd5e22f50b14f6d846163456e8c9a7657626fb/testng-6.11.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
3 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> ScalaTest.ShouldBeTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> ScalaTest.SimpleTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> ScalaTest.testNGTest
used names:
168 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> $org_scalatest_assert_macro_expr
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> $org_scalatest_assert_macro_left
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> $org_scalatest_assert_macro_right
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> +
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> +=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> -
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> <init>
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> ===
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> >
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> BeforeMethod
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Bool
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> ClassTag
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Emptiness
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Equality
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> ListBuffer
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Matchers
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Position
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Predef
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Prettifier
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> ScalaTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> ShouldBeTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> String
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> StringBuilder
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> StringIndexOutOfBoundsException
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Test
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> TestNGSuite
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> Unit
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> an
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> annotations
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> append
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> apply
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> assert
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> assertionsHelper
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> be
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> binaryMacroBool
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> charAt
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> collection
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> convertToAnyShouldWrapper
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> convertToEqualizer
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> convertToStringShouldWrapper
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> default
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> emptinessOfGenTraversable
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> empty
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> enablers
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> here
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> intercept
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> isEmpty
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> lb
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> lb_=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> length
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> macroAssert
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> materializeClassTag
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> mutable
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> org
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> package
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> println
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> reflect
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> remove
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> sb
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> sb_=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> scala
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> scalactic
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> scalatest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> should
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> source
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> testng
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> thrownBy
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> toString
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> unaryMacroBool
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> while$1
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> $org_scalatest_assert_macro_expr
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> $org_scalatest_assert_macro_left
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> $org_scalatest_assert_macro_right
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> +
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> +=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> -
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> <init>
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> ===
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> >
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Assert
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> BeforeMethod
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Bool
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> ClassTag
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Equality
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> ListBuffer
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Position
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Predef
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Prettifier
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> ScalaTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> SimpleTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> String
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> StringBuilder
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> StringIndexOutOfBoundsException
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Test
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> TestNGSuite
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> Unit
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> annotations
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> append
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> apply
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> assert
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> assertEquals
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> assertionsHelper
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> binaryMacroBool
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> charAt
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> collection
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> convertToEqualizer
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> default
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> here
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> intercept
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> isEmpty
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> lb
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> lb_=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> length
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> macroAssert
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> materializeClassTag
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> mutable
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> org
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> package
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> println
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> reflect
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> remove
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> sb
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> sb_=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> scala
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> scalactic
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> scalatest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> source
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> testng
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> toString
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> unaryMacroBool
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> while$1
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> +=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> <init>
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> Assert
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> Assertions
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> BeforeTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> ListBuffer
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> Position
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> Predef
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> ScalaTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> String
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> StringBuilder
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> StringIndexOutOfBoundsException
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> Test
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> Unit
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> annotations
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> append
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> assertEquals
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> assertTrue
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> charAt
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> collection
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> fail
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> here
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> isEmpty
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> lb
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> lb_=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> mutable
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> org
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> package
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> sb
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> sb_=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> scala
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> scalactic
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> scalatest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> source
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> testNGTest
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> testng
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> toString
product stamps:
3 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test/ScalaTest/ShouldBeTest.class -> lastModified(1489953209000)
/Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test/ScalaTest/SimpleTest.class -> lastModified(1489953209000)
/Users/raliclo/work/bak2/HackerRanks/IDEAs/build/classes/test/ScalaTest/testNGTest.class -> lastModified(1489953209000)
source stamps:
3 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> hash(516e78d061451eab0d52c8d9746c925a95023fcb)
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> hash(74cd7c88621f1a8ca5973adf2e80e83648c92216)
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> hash(68c6ab308ce75d44154115c42c013f62e8f6ab8a)
binary stamps:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1481605174000)
/Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.1/dd235d04037dc6f4b6090257872dd35359a563ce/scala-library-2.12.1.jar -> lastModified(1489950631000)
/Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest-app_2.12/3.2.0-SNAP4/74934b297e870aa7ce7621bc092236e0eb44bc01/scalatest-app_2.12-3.2.0-SNAP4.jar -> lastModified(1489953165000)
/Users/raliclo/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.11/1fdd5e22f50b14f6d846163456e8c9a7657626fb/testng-6.11.jar -> lastModified(1489953161000)
class names:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_121.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.Object
/Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.1/dd235d04037dc6f4b6090257872dd35359a563ce/scala-library-2.12.1.jar -> scala.collection.mutable.ListBuffer$
/Users/raliclo/.gradle/caches/modules-2/files-2.1/org.scalatest/scalatest-app_2.12/3.2.0-SNAP4/74934b297e870aa7ce7621bc092236e0eb44bc01/scalatest-app_2.12-3.2.0-SNAP4.jar -> org.scalatest.Assertions
/Users/raliclo/.gradle/caches/modules-2/files-2.1/org.testng/testng/6.11/1fdd5e22f50b14f6d846163456e8c9a7657626fb/testng-6.11.jar -> org.testng.annotations.Test
internal apis:
3 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> 

/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> 

/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHDCYc8AAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAACc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwR77XhHQAFXVuY29uc3RyYWluZWRFcXVhbGl0eXNxAH4AC4X5nPx0ABJjb252ZXJ0VG9FcXVhbGl6ZXJ1cQB+AAkAAAA+c3EAfgAL8JBqnnQABmFzc2VydHNxAH4AC/uk52x0AAp2ZXJpZnlFYXN5c3EAfgALw1jrKHQAB3N1Y2NlZWRzcQB+AAsPi6N2dAAGbm90aWZ5c3EAfgALaVIUvHQAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgAL28KB0XQAEEFzc2VydGlvbnNIZWxwZXJzcQB+AAstgu+hdAAGY2FuY2Vsc3EAfgALsLscf3QACWludGVyY2VwdHNxAH4AC7oGSuJ0AARmYWlsc3EAfgALsI41FHQAAmxic3EAfgALD4t8XHQAFGFzc2VydERvZXNOb3RDb21waWxlc3EAfgALEvdUd3QABHdhaXRzcQB+AAsKSCOHdAANJGFzSW5zdGFuY2VPZnNxAH4ACxYAEiJ0AAZlcXVhbHNzcQB+AAvCWN+SdAAsY29udmVydEVxdWl2YWxlbmNlVG9BVG9CQ29udmVyc2lvbkNvbnN0cmFpbnRzcQB+AAv6Bth3dAAPZGVmYXVsdEVxdWFsaXR5c3EAfgALJMROwnQAImNvbnZlcnRFcXVpdmFsZW5jZVRvQVRvQkNvbnN0cmFpbnRzcQB+AAudHs4udAAMYXNJbnN0YW5jZU9mc3EAfgALT/8+rHQADHN5bmNocm9uaXplZHNxAH4AC1r1tTh0AA5hc3NlcnRDb21waWxlc3NxAH4AC/9nYiZ0AAxhc3NlcnRUaHJvd3NzcQB+AAtao7rIdAANJGlzSW5zdGFuY2VPZnNxAH4AC/H31z90AAR0cmFwc3EAfgALg0pwvnQADGFzc2VydFJlc3VsdHNxAH4ACz4NlQh0ACxjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb252ZXJzaW9uQ29uc3RyYWludHNxAH4ACwdWs1d0ABV0eXBlQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAtXWwPudAADIT09c3EAfgALcw7YDHQACW5vdGlmeUFsbHNxAH4AC3CHs+10AAppbml0aWFsaXplc3EAfgALrLH1VXQADGlzSW5zdGFuY2VPZnNxAH4ACw8K/Oh0AAh3aXRoQ2x1ZXNxAH4ACxYozQ50ABBhc3NlcnRpb25zSGVscGVyc3EAfgAL2zGAOXQAD2Fzc2VydFR5cGVFcnJvcnNxAH4AC6jVWLV0AAhsZWZ0U2lkZXNxAH4ACyYmnDR0AAJzYnNxAH4AC2MGjwx0AAY8aW5pdD5zcQB+AAtAk4MsdAALbWFjcm9Bc3N1bWVzcQB+AAsbresTdAAJRXF1YWxpemVyc3EAfgALkqRd7HQAG25ld0Fzc2VydGlvbkZhaWxlZEV4Y2VwdGlvbnNxAH4AC73tmGd0AAI9PXNxAH4AC+2X4750AAVjbG9uZXNxAH4AC576h6Z0AAZhc3N1bWVzcQB+AAtc+YlRdAAgbG93UHJpb3JpdHlUeXBlQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAuLqxKEdAADPT09c3EAfgALGOdfdHQAGG5ld1Rlc3RDYW5jZWxlZEV4Y2VwdGlvbnNxAH4AC09tf6V0AAh0b1N0cmluZ3NxAH4AC4MC0u10AAIhPXNxAH4AC1kpwHJ0AAp0ZXN0TkdUZXN0c3EAfgALjit8hHQACGdldENsYXNzc3EAfgAL3gm753QAEXBlbmRpbmdVbnRpbEZpeGVkc3EAfgALELspq3QAImNvbnZlcnRFcXVpdmFsZW5jZVRvQlRvQUNvbnN0cmFpbnRzcQB+AAt10dofdAACbmVzcQB+AAtW9t6JdAARQ2hlY2tpbmdFcXVhbGl6ZXJzcQB+AAsGg7DFdAAHcGVuZGluZ3NxAH4ACzGWgG50AAttYWNyb0Fzc2VydHNxAH4AC3pUTs90AAJlcXNxAH4AC1hHj/x0ABpjb252ZXJ0VG9DaGVja2luZ0VxdWFsaXplcnNxAH4AC8mu8KJ0AAIjI3NxAH4ACwZ/LKF0AAhmaW5hbGl6ZXNxAH4AC688Ku10ABtjb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAuHhpnjdAAIaGFzaENvZGVzcQB+AAtEC+JfdAAGYXBwZW5kc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4Al3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AAx4cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzxxETIWmc3CQCAAFCAAVmbGFnc3hwAHQAFFNjYWxhVGVzdC50ZXN0TkdUZXN0dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAEdAAhb3JnLnRlc3RuZy5hbm5vdGF0aW9ucy5CZWZvcmVUZXN0dAAbb3JnLnRlc3RuZy5hbm5vdGF0aW9ucy5UZXN0dAAnc2NhbGEucmVmbGVjdC5tYWNyb3MuaW50ZXJuYWwubWFjcm9JbXBsdAAQc2NhbGEuZGVwcmVjYXRlZHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AtHhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AswBwc3EAfgC4c3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AJdMAAlpbmhlcml0ZWRxAH4Al0wAB3BhcmVudHNxAH4Al3hxAH4AvHNxAH4AswBwc3EAfgC4dXEAfgCSAAAAAHNxAH4AswBwc3EAfgC4dXEAfgCSAAAAAHNxAH4AswBwc3EAfgC4dXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAVzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AAxMAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgC7dAAKQXNzZXJ0aW9uc3NyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4Au3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAA3NyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AAx4cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAADb3Jnc3EAfgDYdAAJc2NhbGF0ZXN0c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+ANlzcQB+AMx0AAxUcmlwbGVFcXVhbHNzcQB+ANBzcQB+ANN1cQB+ANYAAAADc3EAfgDYdAADb3Jnc3EAfgDYdAAJc2NhbGFjdGljcQB+AN9zcQB+AMx0ABNUcmlwbGVFcXVhbHNTdXBwb3J0cQB+AOJzcQB+AMx0AAZPYmplY3RzcQB+ANBzcQB+ANN1cQB+ANYAAAADc3EAfgDYdAAEamF2YXNxAH4A2HQABGxhbmdxAH4A33NxAH4AzHQAA0FueXNxAH4A0HNxAH4A03VxAH4A1gAAAAJzcQB+ANh0AAVzY2FsYXEAfgDfdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAAFzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADHhwdAAJU2NhbGFUZXN0c3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFa6CGjfHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0AD0vVXNlcnMvcmFsaWNsby93b3JrL2JhazIvSGFja2VyUmFua3MvSURFQXMvYnVpbGQvY2xhc3Nlcy90ZXN0dAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUaMarMIznXUQVQRXELAE/Yuj2q4o=
external apis:
0 items
source infos:
3 items
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/ShouldBeTest.scala -> 
AAAAAAAAAAA=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/SimpleTest.scala -> 
AAAAAAAAAAA=
/Users/raliclo/work/bak2/HackerRanks/IDEAs/src/test/scala/ScalaTest/testNGTest.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWugho3x1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAPS9Vc2Vycy9yYWxpY2xvL3dvcmsvYmFrMi9IYWNrZXJSYW5rcy9JREVBcy9idWlsZC9jbGFzc2VzL3Rlc3R0AAEv
