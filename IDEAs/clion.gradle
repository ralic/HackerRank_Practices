
//Chapter 70. Building native software
//https://docs.gradle.org/current/userguide/native_software.html#cppPlugin

/*
C / C++ / Assembler /Golang support
TODO Complete the configuration & Support
 */
//apply plugin: "c"
//apply plugin: "cpp"
//apply plugin: "assembler"
//apply plugin: "objective-cpp"
//apply plugin: "objective-c"
//
//model {
//    components {
////        platforms {
////            macOS {
////                architecture "x86_64"
////                operatingSystem "osx"
////            }
////        }
//        main(NativeExecutableSpec) {
////            targetPlatform macOS  // Error : Incubating.
//            sources {
//                c {
//                    source {
//                        srcDir "src/main/clang"
//                        include "**/*.c"
//                    }
//                    exportedHeaders {
//                        srcDir "src/include"
//                    }
//                }
//                cpp {
//                    source {
//                        srcDir "src/main/cpp"
//                        include "**/*.cpp"
//                    }
//                }
//
//                //https://docs.gradle.org/current/dsl/org.gradle.language.assembler.AssemblerSourceSet.html
//                //Note: This property is incubating and may change in a future version of Gradle.
//                asm {
//                    source {
//                        srcDirs "src/main/asm"
//                        include "**/*.s"
//                    }
//                }
//            }
//            binaries.all {
//                // Prerequsite : Know about "Preprocessor, source, compiler, linker , assembler "
//                //https://courses.cs.washington.edu/courses/cse378/97au/help/compilation.html
//                // Define a preprocessor macro for every binary
//                cppCompiler.define "NDEBUG"
//
//                // Define toolchain-specific source, compiler and linker, assembler options
//                if (toolChain in Gcc) {
//                    sources {
//                        platformAsm(AssemblerSourceSet) {
//                            source.srcDir "src/main/asm/gcc"
//                        }
//                    }
//                    assembler.args "-g"
//                    cppCompiler.args "-O2", "-fno-access-control"
//                    linker.args "-Xlinker", "-S"
//                }
//                if (toolChain in VisualCpp) {
//                    sources {
//                        platformAsm(AssemblerSourceSet) {
//                            source.srcDir "src/main/asm/visualcpp"
//                        }
//                    }
//                    assembler.args "/Zi"
//                    cppCompiler.args "/Zi"
//                    linker.args "/DEBUG"
//                }
//            }
//        }
//    }
//}