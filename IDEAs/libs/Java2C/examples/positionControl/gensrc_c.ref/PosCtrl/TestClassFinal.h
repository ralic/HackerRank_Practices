/**************************************************************************
 * This file is generated by Java2C
 **copyright***************************************************************
 *************************************************************************/
#ifndef __PosCtrl_TestClassFinal_h__
#define __PosCtrl_TestClassFinal_h__

#include "Jc/ObjectJc.h"        //basic concept

#include "Jc/StringJc.h"        //used often

#include "Fwc/fw_Exception.h"   //basic concept


/* J2C: includes *********************************************************/


/*@CLASS_C TestClassFinal @@@@@@@@@@@@@@@@@@@@@@@@*/

typedef struct TestClassFinal_t
{ 
  union { ObjectJc object; } base; 
  int32 a; 
} TestClassFinal_s;
  

#define sizeof_TestClassFinal_s sizeof(TestClassFinal_s)


/**J2c: Definitions of the enhanced reference. It's conditinally because it may be defined in a included header before. */
#ifndef TestClassFinalREFDEF
  #define TestClassFinalREFDEF
  typedef struct TestClassFinalREF_t { ObjectRefValuesJc refbase; struct TestClassFinal_t* ref; } TestClassFinalREF;
#endif

/**J2c: Definitions of the array forms. NOTE: The number of elements are a helper for debug, the really used number depends on the memory size! */
typedef struct TestClassFinal_X_t { ObjectArrayJc head; TestClassFinalREF data[50]; } TestClassFinal_X;
typedef struct TestClassFinal_Y_t { ObjectArrayJc head; TestClassFinal_s data[50]; } TestClassFinal_Y;

 extern struct ClassJc_t const reflection_TestClassFinal_s;
  


/**CONST_Type useable as initializer for embedded/stack-instances*/
#define CONST_TestClassFinal(OBJP) { CONST_ObjectJc(sizeof(TestClassFinal_s), OBJP, &reflection_TestClassFinal_s), 0 }

/**J2C: finalize declaration. It is called by Garbage collector and inside other finalized methods.
 * It should be called by the user if the instance is removed. */
void finalize_TestClassFinal_F(ObjectJc* othis, ThCxt* _thCxt);




/**Default constructor. */
METHOD_C struct TestClassFinal_t* ctorO_TestClassFinal(ObjectJc* othis, ThCxt* _thCxt);

METHOD_C void set_TestClassFinal(TestClassFinal_s* ythis, int32 value, ThCxt* _thCxt);

METHOD_C int32 get_TestClassFinal(TestClassFinal_s* ythis, ThCxt* _thCxt);


/* J2C: Method table contains all dynamic linked (virtual) methods
 * of the class and all super classes and interfaces. */
 extern const char sign_Mtbl_TestClassFinal[]; //marker for methodTable check
typedef struct Mtbl_TestClassFinal_t
{ MtblHeadJc head;
  Mtbl_ObjectJc ObjectJc;
} Mtbl_TestClassFinal;



#if defined(__CPLUSPLUSJcpp) && defined(__cplusplus)
/* J2C: The C++-class-definition. */
class TestClassFinal : private TestClassFinal_s
{ public:

  TestClassFinal(){ init_ObjectJc(&this->base.object, sizeof(TestClassFinal_s), 0); setReflection_ObjectJc(&this->base.object, &reflection_TestClassFinal_s, 0); ctorO_TestClassFinal(&this->base.object,  null/*_thCxt*/); }

  int32 get(){  return get_TestClassFinal(this,  null/*_thCxt*/); }

  void set(int32 value){ set_TestClassFinal(this, value,  null/*_thCxt*/); }
};

#endif /*__CPLUSPLUSJcpp*/

#endif //__PosCtrl_TestClassFinal_h__
