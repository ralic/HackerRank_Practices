<?Java2C-stc www.vishia.org version="0.94" encoding="UTF8" ?>
Structure of translated java-file "PosCtrl/SetValueGenerator"
package org/vishia/exampleJava2C/java4c/;

class SetValueGenerator; nameC=SetValueGenerator_s; argIdent=XX; extends java/lang/Object implements org/vishia/exampleJava2C/java4c/SetValueGenerator_ifc //creationMode=P
{  
    //Innerclass: Target_SetValueGenerator
  InnerClass{ 
    class Target; nameC=Target_SetValueGenerator_s; argIdent=XX; extends java/lang/Object //creationMode=C
    {  
        //Innerclass: OnlyTest_Target_SetValueGenerator
        //Innerclass: Target_SetValueGenerator
        //Innerclass: SetValueGenerator
      InnerClass{ 
        class OnlyTest; nameC=OnlyTest_Target_SetValueGenerator_s; argIdent=XX; extends java/lang/Object //creationMode=C
        {  
            //Innerclass: InnerTest_OnlyTest_Target_SetValueGenerator
            //Innerclass: OnlyTest_Target_SetValueGenerator
            //Innerclass: Target_SetValueGenerator
            //Innerclass: SetValueGenerator
            //Innerclass: Target_SetValueGenerator
          InnerClass{ 
            class InnerTest; nameC=InnerTest_OnlyTest_Target_SetValueGenerator_s; argIdent=XX; extends java/lang/Object //creationMode=C
            {  
                //Innerclass: InnerTest_OnlyTest_Target_SetValueGenerator
                //Innerclass: OnlyTest_Target_SetValueGenerator
                //Innerclass: Target_SetValueGenerator
                //Innerclass: SetValueGenerator
                //Innerclass: Target_SetValueGenerator
                //Innerclass: OnlyTest_Target_SetValueGenerator
            fieldIdents {
              int %.. a;
              //outer=4 ,super=1: int %.d kStandStill_State;
              //outer=4 ,super=1: int %.d kToTarget_State;
              //outer=4 ,super=1: int %.d kWaitForNewTarget_State;
            }
              methods {  
                ctorO-_$, mode= ctor+static: org/vishia/exampleJava2C/java4c/SetValueGenerator.Target.OnlyTest.InnerTest *.. InnerTest_OnlyTest_Target_SetValueGenerator_s();
              }

              castTo {
                java/lang/Object: $ "(?).base.object" $;
                org/vishia/exampleJava2C/java4c/SetValueGenerator.Target.OnlyTest: * "(?)->outer" *;
                org/vishia/exampleJava2C/java4c/SetValueGenerator.Target: * "(?)->outer->outer" *;
              }

            }

          }
        fieldIdents {
          //outer=3 ,super=1: int %.d kStandStill_State;
          //outer=3 ,super=1: int %.d kToTarget_State;
          //outer=3 ,super=1: int %.d kWaitForNewTarget_State;
        }
          methods {  
            ctorO-_$, mode= ctor+static: org/vishia/exampleJava2C/java4c/SetValueGenerator.Target.OnlyTest *.. OnlyTest_Target_SetValueGenerator_s();
          }

          castTo {
            java/lang/Object: $ "(?).base.object" $;
            org/vishia/exampleJava2C/java4c/SetValueGenerator: * "(?)->outer->outer" *;
            org/vishia/exampleJava2C/java4c/SetValueGenerator.Target: * "(?)->outer" *;
          }

        }

      }
    fieldIdents {
      //outer=2 ,super=1: int %.d kStandStill_State;
      //outer=2 ,super=1: int %.d kToTarget_State;
      //outer=2 ,super=1: int %.d kWaitForNewTarget_State;
      short %.. target;
      org/vishia/exampleJava2C/java4c/SetValueGenerator @.. testGC;
      short %.. timeStandIdleOnTarget;
      short %.. velocity;
    }
      methods {  
        ctorO-_$, mode= ctor+static: org/vishia/exampleJava2C/java4c/SetValueGenerator.Target *.. Target_SetValueGenerator_s();
        finalize-_$, defined: java/lang/Object.finalize, mode= overrideable: void %.r null();
        finalize-_$, defined: java/lang/Object.finalize, mode= overrideable: void %.. void();
      }

      castTo {
        java/lang/Object: $ "(?).base.object" $;
        org/vishia/exampleJava2C/java4c/SetValueGenerator: * "(?)->outer" *;
      }

    }

  }
fieldIdents {
  org/vishia/exampleJava2C/java4c/SetValueGenerator.Target @.. actTarget;
  java/lang/StringBuffer(instance=java/lang/StringBuffer, fixBufferSize=400) $B. bufferFormatter;
  int %.. countStandStill;
  short %.. dvalue;
  boolean %.. isWaitingForTarget;
  int %.d kStandStill_State;
  int %.d kToTarget_State;
  int %.d kWaitForNewTarget_State;
  org/vishia/msgDispatch/LogMessage @.. msg;
  org/vishia/exampleJava2C/java4c/SetValueGenerator.Target @.. nextTarget;
  org/vishia/exampleJava2C/java4c/OamVariables @.. oamVariables;
  org/vishia/util/StringFormatter(instance=org/vishia/util/StringFormatter) $.. sFormatter;
  short %.. state;
  short %.. value;
}
  methods {  
    ctorO-_$, mode= ctor+static: org/vishia/exampleJava2C/java4c/SetValueGenerator *.. SetValueGenerator_s(org/vishia/msgDispatch/LogMessage *.. msg,org/vishia/exampleJava2C/java4c/OamVariables *.. oamVariables);
    finalize-_$, defined: java/lang/Object.finalize, mode= overrideable: void %.. void();
    requiresNextTarget-_$, mode= overrideable: boolean %.r null();
    setTarget+_i-_$, defined: org/vishia/exampleJava2C/java4c/SetValueGenerator_ifc.setTarget, mode= overrideable: boolean %.r null(short %.. targetValue);
    step-_$, defined: org/vishia/exampleJava2C/java4c/SetValueGenerator_ifc.step, mode= overrideable: short %.r null();
  }

  methods-overrideable {
    requiresNextTarget_SetValueGenerator;
  }

  castTo {
    java/lang/Object: $ "(?).base.SetValueGenerator_ifc.base.object" $;
    org/vishia/exampleJava2C/java4c/SetValueGenerator_ifc: $ "(?).base.SetValueGenerator_ifc" $;
  }

}
