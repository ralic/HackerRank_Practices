<?Java2C-stc www.vishia.org version="0.94" encoding="UTF8" ?>
Structure of translated java-file "TestContainer_Test"
package org/vishia/java2C/test/;

class TestContainer; nameC=TestContainer_Test_s; argIdent=XX; extends java/lang/Object //creationMode=P
{  
    //Innerclass: C_stressTest_TestContainer_Test
  InnerClass{ 
    nonStaticInner anonymous class C_stressTest; nameC=C_stressTest_TestContainer_Test_s; argIdent=XX; extends java/lang/Thread //creationMode=Y
    {  
        //Innerclass: TestContainer_Test
    fieldIdents {
      //outer=2 ,super=1: org/vishia/java2C/test/SimpleClass(instance=org/vishia/java2C/test/SimpleClass) $.. anObject;
      //outer=2 ,super=1: java/util/LinkedList(instance=java/util/LinkedList) $.. linkedList;
      //outer=2 ,super=1: org/vishia/java2C/test/TestContainer.C_stressTest(instance=org/vishia/java2C/test/TestContainer.C_stressTest) $.. stressTest;
    }
      methods {  
        run-_$, defined: java/lang/Runnable.run, mode= overrideable: void %.r null();
      }

      castTo {
        java/lang/Object: $ "(?).base.super.base.RunnableJc.base.object" $;
        java/lang/Runnable: $ "(?).base.super.base.RunnableJc" $;
        org/vishia/java2C/test/TestContainer: * "(?)->outer" *;
        java/lang/Thread: $ "(?).base.super" $;
      }

    }

  }
fieldIdents {
  org/vishia/java2C/test/SimpleClass(instance=org/vishia/java2C/test/SimpleClass) $.. anObject;
  java/util/LinkedList(instance=java/util/LinkedList) $.. linkedList;
  org/vishia/java2C/test/TestContainer.C_stressTest(instance=org/vishia/java2C/test/TestContainer.C_stressTest) $.. stressTest;
}
  methods {  
    addSomeData-_$, mode= overrideable: void %.r null();
    addToList-_$, mode= overrideable: void %.r null(java/lang/Object *.. src);
    ctorO-_$, mode= ctor+static: org/vishia/java2C/test/TestContainer *.. TestContainer_Test_s();
    ctorO_C_stressTest-_$, mode= ctor+anonymousCtor+nonStaticCtor: org/vishia/java2C/test/TestContainer.C_stressTest *.. C_stressTest_TestContainer_Test_s(s0 t.. name);
    getAndRemoveAllData-_$, mode= overrideable: void %.r null();
    removeFirstfromLinkedList-_$, mode= overrideable: java/lang/Object *.r null();
    test-_$, mode= overrideable: void %.r null();
  }

  methods-overrideable {
    addToList_TestContainer_Test;
    removeFirstfromLinkedList_TestContainer_Test;
    addSomeData_TestContainer_Test;
    getAndRemoveAllData_TestContainer_Test;
    test_TestContainer_Test;
  }

  castTo {
    java/lang/Object: $ "(?).base.object" $;
  }

}
