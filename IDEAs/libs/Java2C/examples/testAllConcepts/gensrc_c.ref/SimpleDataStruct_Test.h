/**************************************************************************
 * This file is generated by Java2C
 **copyright***************************************************************
 *************************************************************************/
#ifndef __SimpleDataStruct_Test_h__
#define __SimpleDataStruct_Test_h__

#include "Jc/ObjectJc.h"        //basic concept

#include "Jc/StringJc.h"        //used often

#include "Fwc/fw_Exception.h"   //basic concept


/* J2C: includes *********************************************************/


/*@CLASS_C SimpleDataStruct_Test @@@@@@@@@@@@@@@@@@@@@@@@*/

typedef struct SimpleDataStruct_Test_t
{ 
  int16 xb;   /*Some variables in the data class. <code>short</code>in Java will be translated to <code>int16</code> in C. */
  int16 yb;   /*Some variables in the data class. <code>short</code>in Java will be translated to <code>int16</code> in C. */
  double db;   /*A double variable in Java is a double variable in C too*/
} SimpleDataStruct_Test_s;
  

#define sizeof_SimpleDataStruct_Test_s sizeof(SimpleDataStruct_Test_s)


/**J2c: Definitions of the enhanced reference. It's conditinally because it may be defined in a included header before. */
#ifndef SimpleDataStruct_TestREFDEF
  #define SimpleDataStruct_TestREFDEF
  typedef struct SimpleDataStruct_TestREF_t { ObjectRefValuesJc refbase; struct SimpleDataStruct_Test_t* ref; } SimpleDataStruct_TestREF;
#endif

/**J2c: Definitions of the array forms. NOTE: The number of elements are a helper for debug, the really used number depends on the memory size! */
typedef struct SimpleDataStruct_Test_X_t { ObjectArrayJc head; SimpleDataStruct_TestREF data[50]; } SimpleDataStruct_Test_X;
typedef struct SimpleDataStruct_Test_Y_t { ObjectArrayJc head; SimpleDataStruct_Test_s data[50]; } SimpleDataStruct_Test_Y;

 extern struct ClassJc_t const reflection_SimpleDataStruct_Test_s;
  


/**CONST_Type useable as initializer for embedded/stack-instances*/
#define CONST_SimpleDataStruct_Test(OBJP) { CONST_ObjectJc(sizeof(SimpleDataStruct_Test_s), OBJP, &reflection_SimpleDataStruct_Test_s), 0 }

/**J2C: finalize declaration. It is called by Garbage collector and inside other finalized methods.
 * It should be called by the user if the instance is removed. */
void finalize_SimpleDataStruct_Test_F(SimpleDataStruct_Test_s* ythis, ThCxt* _thCxt);




/**Default constructor. */
METHOD_C struct SimpleDataStruct_Test_t* ctorM_SimpleDataStruct_Test(MemC mthis, ThCxt* _thCxt);


#if defined(__CPLUSPLUSJcpp) && defined(__cplusplus)
/* J2C: The C++-class-definition. */
class SimpleDataStruct_Test : private SimpleDataStruct_Test_s
{ public:
};

#endif /*__CPLUSPLUSJcpp*/

#endif //__SimpleDataStruct_Test_h__
