#ifndef __TestGarbageCollector_h__
#define __TestGarbageCollector_h__
//this file is generated by Java2C

#include "ObjectJc.h"

#include "ExceptionJc.h"

#include "allReferences.h"
typedef struct TestGarbageCollector_t
{ ObjectJc object;
  TestClassREF refA;
  TestClassREF refB;
} TestGarbageCollector;
  

extern struct ClassJc_t const* clazzTestGarbageCollector;
  

  extern TestGarbageCollectorREF theInstance_TestGarbageCollector;

/**Default constructor. */
METHOD_C TestGarbageCollector* ctorO_TestGarbageCollector(ObjectJc* yObj, struct ThreadContextJc_t* _threadContext);



void finalize_TestGarbageCollector(ObjectJc* yObj, struct ThreadContextJc_t* _threadContext);
METHOD_C void main_TestGarbageCollector(TestGarbageCollector* ythis, StringJc args, struct ThreadContextJc_t* _threadContext);

/**The run method called in static main(). It uses some references. */
METHOD_C void run_TestGarbageCollector(TestGarbageCollector* ythis, struct ThreadContextJc_t* _threadContext);

/**This method is be called as test in C-level while the garbage collector runs,*/
METHOD_C void run1_TestGarbageCollector(TestGarbageCollector* ythis, struct ThreadContextJc_t* _threadContext);

#endif //__TestGarbageCollector_h__
