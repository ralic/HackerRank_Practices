/**************************************************************************
 * This file is generated by Java2C
 **copyright***************************************************************
 *************************************************************************/
#ifndef __J1c_StringPartJc_h__
#define __J1c_StringPartJc_h__

#include "Jc/ObjectJc.h"        //basic concept

#include "Jc/StringJc.h"        //used often

#include "Fwc/fw_Exception.h"   //basic concept


/* J2C: includes *********************************************************/
#include "Jc/StringJc.h"  //embedded type in class data


/*@CLASS_C StringPartJc @@@@@@@@@@@@@@@@@@@@@@@@*/

typedef struct StringPartJc_t
{ 
  union { ObjectJc object; } base; 
  int32 start;   /*The actual start position of the valid part.*/
  int32 end;   /*The actual exclusive end position of the valid part.*/
  int32 startMin;   /*The leftest possible start position*/
  int32 endMax;   /*The rightest possible exclusive end position*/
  StringJc content;   /*The referenced string*/
  int32 nLineCt;   /*The line number, counted by founded \n */
  bool bCurrentOk;   /*false if current scanning is not match*/
  bool bStartScan;   /*If true, than all idxLastScanned..*/
  int32 startLast;   /*Borders of the last part before calling of scan__(), seek__(), lento__()*/
  int32 endLast;   /*Borders of the last part before calling of scan__(), seek__(), lento__()*/
  int32 startScan;   /*Position of scanStart() or after scanOk() as start of next scan operations. */
  bool bFound;   /*True if the last operation of lento__(), seek etc. has found anything. See {@link #found()}. */
  struct nLastIntegerNumber_Y { ObjectArrayJc head; int64 data[5]; }nLastIntegerNumber;   /*Last scanned integer number.*/
  int32 idxLastIntegerNumber;   /*current index of the last scanned integer number. -1=nothing scanned. 0..4=valid*/
  struct nLastFloatNumber_Y { ObjectArrayJc head; double data[5]; }nLastFloatNumber;   /*Last scanned float number*/
  int32 idxLastFloatNumber;   /*current index of the last scanned float number. -1=nothing scanned. 0..4=valid*/
  StringJc sLastString;   /*Last scanned string. */
  int32 bitMode;   /*Some mode bits */
  StringJc sCommentStart;   /*The string defined the start of comment inside a text.*/
  StringJc sCommentEnd;   /*The string defined the end of comment inside a text.*/
  StringJc sCommentToEol;   /*The string defined the start of comment to end of line*/
} StringPartJc_s;
  

#define sizeof_StringPartJc_s sizeof(StringPartJc_s)


/**J2c: Definitions of the enhanced reference. It's conditinally because it may be defined in a included header before. */
#ifndef StringPartJcREFDEF
  #define StringPartJcREFDEF
  typedef struct StringPartJcREF_t { ObjectRefValuesJc refbase; struct StringPartJc_t* ref; } StringPartJcREF;
#endif

/**J2c: Definitions of the array forms. NOTE: The number of elements are a helper for debug, the really used number depends on the memory size! */
typedef struct StringPartJc_X_t { ObjectArrayJc head; StringPartJcREF data[50]; } StringPartJc_X;
typedef struct StringPartJc_Y_t { ObjectArrayJc head; StringPartJc_s data[50]; } StringPartJc_Y;

 extern struct ClassJc_t const reflection_StringPartJc_s;
  


/**CONST_Type useable as initializer for embedded/stack-instances*/
#define CONST_StringPartJc(OBJP) { CONST_ObjectJc(sizeof(StringPartJc_s), OBJP, &reflection_StringPartJc_s), 0 }

/**J2C: finalize declaration. It is called by Garbage collector and inside other finalized methods.
 * It should be called by the user if the instance is removed. */
void finalize_StringPartJc_F(ObjectJc* othis, ThCxt* _thCxt);


#define seekEnd_StringPartJc 1  /*Flag to force setting the start position after the seeking string*/
#define mSeekBackward__StringPartJc 0x10  /*Flag bit to force seeking backward*/
#define mSeekToLeft__StringPartJc 0x40  /*Flag bit to force seeking left from start (Backward)*/
 extern const int32 seekToLeft_StringPartJc;   /*Flag to force seeking backward from the start position*/
 extern const int32 seekBack_StringPartJc;   /*Flag to force seeking backward from the end position*/
#define seekNormal_StringPartJc 0  /*Flag to force seeking forward*/
#define mSkipOverWhitespace_mode_StringPartJc 0x1  /*Bit in mode*/
#define mSkipOverCommentInsideText_mode_StringPartJc 0x2  /*Bit in mode*/
#define mSkipOverCommentToEol_mode_StringPartJc 0x4  /*Bit in mode*/
 extern const char cStartOfText_StringPartJc;   /*The char used to code start of text. */
 extern const char cEndOfText_StringPartJc;   /*The char used to code end of text. */


/**Interface to report something, only level Report.fineDebug is used.*/
METHOD_C struct StringPartJc_t* ctorO_StringPartJc(ObjectJc* othis, ThCxt* _thCxt);

/**Creates a new StringPart, with the given content from a String*/
METHOD_C struct StringPartJc_t* ctorO_S_StringPartJc(ObjectJc* othis, StringJc content, ThCxt* _thCxt);

/**Creates a new StringPart with the same String as the given StringPart*/
METHOD_C struct StringPartJc_t* ctorO_XX_StringPartJc(ObjectJc* othis, struct StringPartJc_t* src, ThCxt* _thCxt);

/**Sets the content to the given string, forgets the old content*/
typedef struct StringPartJc_t* MT_assign_S_StringPartJc(StringPartJc_s* ythis, StringJc content, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* assign_S_StringPartJc_F(StringPartJc_s* ythis, StringJc content, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* assign_S_StringPartJc(StringPartJc_s* ythis, StringJc content, ThCxt* _thCxt);

/**Sets the StringPart with the same String object as the given StringPart, forgets the old content.*/
typedef struct StringPartJc_t* MT_assign_XX_StringPartJc(StringPartJc_s* ythis, struct StringPartJc_t* src, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* assign_XX_StringPartJc_F(StringPartJc_s* ythis, struct StringPartJc_t* src, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* assign_XX_StringPartJc(StringPartJc_s* ythis, struct StringPartJc_t* src, ThCxt* _thCxt);

/**Sets the content of the StringPart , forgets the old content*/
typedef struct StringPartJc_t* MT_assignFromEnd_StringPartJc(StringPartJc_s* ythis, struct StringPartJc_t* src, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* assignFromEnd_StringPartJc_F(StringPartJc_s* ythis, struct StringPartJc_t* src, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* assignFromEnd_StringPartJc(StringPartJc_s* ythis, struct StringPartJc_t* src, ThCxt* _thCxt);

/**Set the mode of ignoring comments.*/
typedef bool MT_setIgnoreComment_b_StringPartJc(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool setIgnoreComment_b_StringPartJc_F(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool setIgnoreComment_b_StringPartJc(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);

/**Set the character string of inline commentmode of ignoring comments.*/
typedef bool MT_setIgnoreComment_SS_StringPartJc(StringPartJc_s* ythis, StringJc sStart, StringJc sEnd, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool setIgnoreComment_SS_StringPartJc_F(StringPartJc_s* ythis, StringJc sStart, StringJc sEnd, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool setIgnoreComment_SS_StringPartJc(StringPartJc_s* ythis, StringJc sStart, StringJc sEnd, ThCxt* _thCxt);

/**Set the mode of ignoring comments to end of line.*/
typedef bool MT_setIgnoreEndlineComment_b_StringPartJc(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool setIgnoreEndlineComment_b_StringPartJc_F(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool setIgnoreEndlineComment_b_StringPartJc(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);

/**Set the character string introducing the comments to end of line.*/
typedef bool MT_setIgnoreEndlineComment_S_StringPartJc(StringPartJc_s* ythis, StringJc sStart, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool setIgnoreEndlineComment_S_StringPartJc_F(StringPartJc_s* ythis, StringJc sStart, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool setIgnoreEndlineComment_S_StringPartJc(StringPartJc_s* ythis, StringJc sStart, ThCxt* _thCxt);

/**Set the mode of ignoring whitespaces.*/
typedef bool MT_setIgnoreWhitespaces_StringPartJc(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool setIgnoreWhitespaces_StringPartJc_F(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool setIgnoreWhitespaces_StringPartJc(StringPartJc_s* ythis, bool bSet, ThCxt* _thCxt);

/**Sets the start of the maximal part to the actual start of the valid part.*/
typedef struct StringPartJc_t* MT_setBeginMaxPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* setBeginMaxPart_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* setBeginMaxPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Sets the start of the part to the exclusively end, set the end to the end of the content.*/
typedef struct StringPartJc_t* MT_fromEnd_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* fromEnd_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* fromEnd_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**get the Line ct*/
typedef int32 MT_getLineCt_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 getLineCt_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 getLineCt_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Gets the length of the valid part*/
typedef int32 MT_getLen_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 getLen_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 getLen_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the valid lenght of the acutual part*/
typedef int32 MT_length_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 length_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 length_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the lenght of the maximal part from current position*/
typedef int32 MT_lengthMaxPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 lengthMaxPart_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 lengthMaxPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Sets the endposition of the part of string to the given chars after start.*/
typedef struct StringPartJc_t* MT_lento_i_StringPartJc(StringPartJc_s* ythis, int32 len, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lento_i_StringPartJc_F(StringPartJc_s* ythis, int32 len, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lento_i_StringPartJc(StringPartJc_s* ythis, int32 len, ThCxt* _thCxt);

/**Sets the endposition of the part of string to exclusively the char cc.*/
typedef struct StringPartJc_t* MT_lento_c_StringPartJc(StringPartJc_s* ythis, char cc, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lento_c_StringPartJc_F(StringPartJc_s* ythis, char cc, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lento_c_StringPartJc(StringPartJc_s* ythis, char cc, ThCxt* _thCxt);

/**Sets the endposition of the part of string to exclusively the given string.*/
typedef struct StringPartJc_t* MT_lento_S_StringPartJc(StringPartJc_s* ythis, StringJc ss, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lento_S_StringPartJc_F(StringPartJc_s* ythis, StringJc ss, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lento_S_StringPartJc(StringPartJc_s* ythis, StringJc ss, ThCxt* _thCxt);

/**Sets the endposition of the part of string to exclusively the given string.*/
typedef struct StringPartJc_t* MT_lento_Si_StringPartJc(StringPartJc_s* ythis, StringJc ss, int32 mode, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lento_Si_StringPartJc_F(StringPartJc_s* ythis, StringJc ss, int32 mode, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lento_Si_StringPartJc(StringPartJc_s* ythis, StringJc ss, int32 mode, ThCxt* _thCxt);

/**Sets the endposition of the part of string to the end of the identifier which is beginning on start.*/
typedef struct StringPartJc_t* MT_lentoIdentifier_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoIdentifier_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoIdentifier_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Sets the endposition of the part of string to the end of the identifier which is beginning on start.*/
typedef struct StringPartJc_t* MT_lentoIdentifier_SS_StringPartJc(StringPartJc_s* ythis, StringJc additionalStartChars, StringJc additionalChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoIdentifier_SS_StringPartJc_F(StringPartJc_s* ythis, StringJc additionalStartChars, StringJc additionalChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoIdentifier_SS_StringPartJc(StringPartJc_s* ythis, StringJc additionalStartChars, StringJc additionalChars, ThCxt* _thCxt);

/**Sets the len to the first position of any given char, but not if the char is escaped.*/
typedef struct StringPartJc_t* MT_lentoAnyNonEscapedChar_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyNonEscapedChar_StringPartJc_F(StringPartJc_s* ythis, StringJc sCharsEnd, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyNonEscapedChar_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, int32 maxToTest, ThCxt* _thCxt);

/**Sets the len to the first position of any given char, but not if the char is escaped.*/
typedef struct StringPartJc_t* MT_lentoNonEscapedString_StringPartJc(StringPartJc_s* ythis, StringJc sEnd, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoNonEscapedString_StringPartJc_F(StringPartJc_s* ythis, StringJc sEnd, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoNonEscapedString_StringPartJc(StringPartJc_s* ythis, StringJc sEnd, int32 maxToTest, ThCxt* _thCxt);

/**Displaces the start of the part for some chars to left or to right.*/
typedef struct StringPartJc_t* MT_seek_i_StringPartJc(StringPartJc_s* ythis, int32 nr, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seek_i_StringPartJc_F(StringPartJc_s* ythis, int32 nr, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seek_i_StringPartJc(StringPartJc_s* ythis, int32 nr, ThCxt* _thCxt);

/**Displaces the start of the part to the first char it is no whitespace.*/
typedef struct StringPartJc_t* MT_seekNoWhitespace_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seekNoWhitespace_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seekNoWhitespace_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**skip over comment and whitespaces*/
typedef struct StringPartJc_t* MT_skipWhitespaceAndComment_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* skipWhitespaceAndComment_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* skipWhitespaceAndComment_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Displaces the start of the part to the first char it is no whitespace or comment.*/
typedef struct StringPartJc_t* MT_seekNoWhitespaceOrComments_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seekNoWhitespaceOrComments_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seekNoWhitespaceOrComments_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/****/
typedef bool MT_isFound_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool isFound_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool isFound_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns true, if the last called seek__(), lento__() or skipWhitespaceAndComment()*/
typedef bool MT_found_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool found_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool found_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Displaces the start of the part to the leftest possible start.*/
typedef struct StringPartJc_t* MT_seekBegin_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seekBegin_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seekBegin_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Searchs the given String inside the valid part, posits the start of the part to the begin of the searched string.*/
typedef struct StringPartJc_t* MT_seek_Si_StringPartJc(StringPartJc_s* ythis, StringJc sSeek, int32 mode, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seek_Si_StringPartJc_F(StringPartJc_s* ythis, StringJc sSeek, int32 mode, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seek_Si_StringPartJc(StringPartJc_s* ythis, StringJc sSeek, int32 mode, ThCxt* _thCxt);

/**Searchs the given String inside the valid part, posits the start of the part to the begin of the searched string.*/
typedef struct StringPartJc_t* MT_seekAnyString_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, int32_Y* nrofFoundString, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seekAnyString_StringPartJc_F(StringPartJc_s* ythis, StringJc_Y* strings, int32_Y* nrofFoundString, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seekAnyString_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, int32_Y* nrofFoundString, ThCxt* _thCxt);

/**Searchs the given character inside the valid part, posits the start of the part to the begin of the searched char.*/
typedef struct StringPartJc_t* MT_seek_ci_StringPartJc(StringPartJc_s* ythis, char cSeek, int32 mode, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seek_ci_StringPartJc_F(StringPartJc_s* ythis, char cSeek, int32 mode, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seek_ci_StringPartJc(StringPartJc_s* ythis, char cSeek, int32 mode, ThCxt* _thCxt);

/**Searchs the given String inside the valid part, posits the start of the part after the end of the searched string.*/
typedef struct StringPartJc_t* MT_xxxseekEnd_StringPartJc(StringPartJc_s* ythis, StringJc sSeek, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* xxxseekEnd_StringPartJc_F(StringPartJc_s* ythis, StringJc sSeek, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* xxxseekEnd_StringPartJc(StringPartJc_s* ythis, StringJc sSeek, ThCxt* _thCxt);

/**Posits the start of the part after all of the chars given in the parameter string.*/
typedef struct StringPartJc_t* MT_seekNoChar_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* seekNoChar_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* seekNoChar_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);

/**Returns the position of one of the chars in sChars within the part, started inside the part with fromIndex,*/
typedef int32 MT_indexOfAnyChar_Sii_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOfAnyChar_Sii_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOfAnyChar_Sii_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);

/**Returns the last position of one of the chars in sChars*/
typedef int32 MT_lastIndexOfAnyChar_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 lastIndexOfAnyChar_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 lastIndexOfAnyChar_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);

/**Returns the position of one of the chars in sChars within the part, started inside the part with fromIndex,*/
typedef int32 MT_indexOfAnyString_StringPartJc(StringPartJc_s* ythis, StringJc_Y* listStrings, int32 fromWhere, int32 maxToTest, int32_Y* nrofFoundString, StringJc_Y* foundString, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOfAnyString_StringPartJc_F(StringPartJc_s* ythis, StringJc_Y* listStrings, int32 fromWhere, int32 maxToTest, int32_Y* nrofFoundString, StringJc_Y* foundString, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOfAnyString_StringPartJc(StringPartJc_s* ythis, StringJc_Y* listStrings, int32 fromWhere, int32 maxToTest, int32_Y* nrofFoundString, StringJc_Y* foundString, ThCxt* _thCxt);

/**Searches any char contented in sChars,*/
typedef int32 MT_indexOfAnyCharOutsideQuotion_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOfAnyCharOutsideQuotion_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOfAnyCharOutsideQuotion_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);

/**Searches the end of a quotion string.*/
typedef int32 MT_indexEndOfQuotion_StringPartJc(StringPartJc_s* ythis, char cEndQuotion, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexEndOfQuotion_StringPartJc_F(StringPartJc_s* ythis, char cEndQuotion, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexEndOfQuotion_StringPartJc(StringPartJc_s* ythis, char cEndQuotion, int32 fromWhere, int32 maxToTest, ThCxt* _thCxt);

/**Returns the position of one of the chars in sChars within the part,*/
typedef int32 MT_indexOfAnyChar_S_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOfAnyChar_S_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOfAnyChar_S_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);

/**Returns the position of the first char other than the chars in sChars within the part, started inside the part with fromIndex,*/
typedef int32 MT_indexOfNoChar_Si_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOfNoChar_Si_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOfNoChar_Si_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 fromWhere, ThCxt* _thCxt);

/**Returns the position of the first char other than the chars in sChars within the part,*/
typedef int32 MT_indexOfNoChar_S_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOfNoChar_S_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOfNoChar_S_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);

/**Sets the length of the current part to any char content in sChars (terminate chars).*/
typedef struct StringPartJc_t* MT_lentoAnyChar_Si_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyChar_Si_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyChar_Si_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, ThCxt* _thCxt);

/**Sets the length of the current part to any char content in sChars (terminate chars).*/
typedef struct StringPartJc_t* MT_lentoAnyChar_Sii_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, int32 mode, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyChar_Sii_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, int32 mode, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyChar_Sii_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, int32 mode, ThCxt* _thCxt);

/**Sets the length of the current part to any terminate string given in sString.*/
typedef struct StringPartJc_t* MT_lentoAnyString_SYi_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyString_SYi_StringPartJc_F(StringPartJc_s* ythis, StringJc_Y* strings, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyString_SYi_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, int32 maxToTest, ThCxt* _thCxt);

/**Sets the length of the current part to any terminate string given in sString.*/
typedef struct StringPartJc_t* MT_lentoAnyString_SYii_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, int32 maxToTest, int32 mode, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyString_SYii_StringPartJc_F(StringPartJc_s* ythis, StringJc_Y* strings, int32 maxToTest, int32 mode, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyString_SYii_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, int32 maxToTest, int32 mode, ThCxt* _thCxt);

/**Sets the length of the current part to any terminate string given in sString.*/
typedef void MT_lentoAnyStringWithIndent_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, StringJc sIndentChars, int32 maxToTest, struct StringBuilderJc_t* buffer, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C void lentoAnyStringWithIndent_StringPartJc_F(StringPartJc_s* ythis, StringJc_Y* strings, StringJc sIndentChars, int32 maxToTest, struct StringBuilderJc_t* buffer, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C void lentoAnyStringWithIndent_StringPartJc(StringPartJc_s* ythis, StringJc_Y* strings, StringJc sIndentChars, int32 maxToTest, struct StringBuilderJc_t* buffer, ThCxt* _thCxt);

/**Sets the length of the current part to any char content in sChars (terminate chars),*/
typedef struct StringPartJc_t* MT_lentoAnyCharOutsideQuotion_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyCharOutsideQuotion_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyCharOutsideQuotion_StringPartJc(StringPartJc_s* ythis, StringJc sChars, int32 maxToTest, ThCxt* _thCxt);

/**Sets the length of the current part to the end of the quotion*/
typedef struct StringPartJc_t* MT_lentoQuotionEnd_StringPartJc(StringPartJc_s* ythis, char sEndQuotion, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoQuotionEnd_StringPartJc_F(StringPartJc_s* ythis, char sEndQuotion, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoQuotionEnd_StringPartJc(StringPartJc_s* ythis, char sEndQuotion, int32 maxToTest, ThCxt* _thCxt);

/**Sets the length of the current part to any char content in sChars (terminate chars).*/
typedef struct StringPartJc_t* MT_lentoAnyChar_S_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lentoAnyChar_S_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lentoAnyChar_S_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);

/**Sets the length to the end of the maximal part if the length is 0*/
typedef struct StringPartJc_t* MT_len0end_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* len0end_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* len0end_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Sets the length to the end of the maximal part.*/
typedef struct StringPartJc_t* MT_setLengthMax_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* setLengthMax_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* setLengthMax_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Posits the end of the part before all of the chars given in the parameter string.*/
typedef struct StringPartJc_t* MT_lenBacktoNoChar_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* lenBacktoNoChar_StringPartJc_F(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* lenBacktoNoChar_StringPartJc(StringPartJc_s* ythis, StringJc sChars, ThCxt* _thCxt);

/**Trims all leading and trailing whitespaces within the part.*/
typedef struct StringPartJc_t* MT_trim_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* trim_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* trim_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Trims a java- or C-style line-comment from end of part and all leading and trailing whitespaces.*/
typedef struct StringPartJc_t* MT_trimComment_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* trimComment_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* trimComment_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the position of the char within the part,*/
typedef int32 MT_indexOf_c_StringPartJc(StringPartJc_s* ythis, char ch, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOf_c_StringPartJc_F(StringPartJc_s* ythis, char ch, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOf_c_StringPartJc(StringPartJc_s* ythis, char ch, ThCxt* _thCxt);

/**Returns the position of the char within the part, started inside the part with fromIndex,*/
typedef int32 MT_indexOf_ci_StringPartJc(StringPartJc_s* ythis, char ch, int32 fromIndex, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOf_ci_StringPartJc_F(StringPartJc_s* ythis, char ch, int32 fromIndex, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOf_ci_StringPartJc(StringPartJc_s* ythis, char ch, int32 fromIndex, ThCxt* _thCxt);

/**Returns the position of the string within the part*/
typedef int32 MT_indexOf_S_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOf_S_StringPartJc_F(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOf_S_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);

/**Returns the position of the string within the part*/
typedef int32 MT_indexOf_Sii_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, int32 fromIndex, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 indexOf_Sii_StringPartJc_F(StringPartJc_s* ythis, StringJc sCmp, int32 fromIndex, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 indexOf_Sii_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, int32 fromIndex, int32 maxToTest, ThCxt* _thCxt);

/**Compares the Part of string with the given string*/
typedef bool MT_equals_S_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool equals_S_StringPartJc_F(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool equals_S_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);

/**compares the Part of string with the given string.*/
typedef bool MT_startsWith_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool startsWith_StringPartJc_F(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool startsWith_StringPartJc(StringPartJc_s* ythis, StringJc sCmp, ThCxt* _thCxt);

/**scan next content, test the requested String.*/
typedef struct StringPartJc_t* MT_scan_StringPartJc(StringPartJc_s* ythis, StringJc sTestP, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scan_StringPartJc_F(StringPartJc_s* ythis, StringJc sTestP, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scan_StringPartJc(StringPartJc_s* ythis, StringJc sTestP, ThCxt* _thCxt);

/**Test the result of scanning and set the scan Pos Ok, if current scanning was ok*/
typedef bool MT_scanOk_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool scanOk_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool scanOk_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/*** */
typedef struct StringPartJc_t* MT_scanQuotion_SSSY_StringPartJc(StringPartJc_s* ythis, StringJc sQuotionmarkStart, StringJc sQuotionMarkEnd, StringJc_Y* sResult, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanQuotion_SSSY_StringPartJc_F(StringPartJc_s* ythis, StringJc sQuotionmarkStart, StringJc sQuotionMarkEnd, StringJc_Y* sResult, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanQuotion_SSSY_StringPartJc(StringPartJc_s* ythis, StringJc sQuotionmarkStart, StringJc sQuotionMarkEnd, StringJc_Y* sResult, ThCxt* _thCxt);

/*** */
typedef struct StringPartJc_t* MT_scanQuotion_SSSYi_StringPartJc(StringPartJc_s* ythis, StringJc sQuotionmarkStart, StringJc sQuotionMarkEnd, StringJc_Y* sResult, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanQuotion_SSSYi_StringPartJc_F(StringPartJc_s* ythis, StringJc sQuotionmarkStart, StringJc sQuotionMarkEnd, StringJc_Y* sResult, int32 maxToTest, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanQuotion_SSSYi_StringPartJc(StringPartJc_s* ythis, StringJc sQuotionmarkStart, StringJc sQuotionMarkEnd, StringJc_Y* sResult, int32 maxToTest, ThCxt* _thCxt);

/**Scans if it is a integer number, contains exclusively of digits 0..9*/
typedef int64 MT_scanDigits_StringPartJc(StringPartJc_s* ythis, bool bHex, int32 maxNrofChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int64 scanDigits_StringPartJc_F(StringPartJc_s* ythis, bool bHex, int32 maxNrofChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int64 scanDigits_StringPartJc(StringPartJc_s* ythis, bool bHex, int32 maxNrofChars, ThCxt* _thCxt);

/*** */
typedef struct StringPartJc_t* MT_scanStart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanStart_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanStart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

typedef bool MT_scanEntry_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C bool scanEntry_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C bool scanEntry_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Scanns a integer number as positiv value without sign.*/
typedef struct StringPartJc_t* MT_scanPositivInteger_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanPositivInteger_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanPositivInteger_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Scans an integer expression with possible sign char '-' at first.*/
typedef struct StringPartJc_t* MT_scanInteger_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanInteger_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanInteger_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Scans an float expression*/
typedef struct StringPartJc_t* MT_scanFloatNumber_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanFloatNumber_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanFloatNumber_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Scans a sequence of hex chars a hex number*/
typedef struct StringPartJc_t* MT_scanHex_StringPartJc(StringPartJc_s* ythis, int32 maxNrofChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanHex_StringPartJc_F(StringPartJc_s* ythis, int32 maxNrofChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanHex_StringPartJc(StringPartJc_s* ythis, int32 maxNrofChars, ThCxt* _thCxt);

/**Scans a integer number possible as hex, or decimal number.*/
typedef struct StringPartJc_t* MT_scanHexOrDecimal_StringPartJc(StringPartJc_s* ythis, int32 maxNrofChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanHexOrDecimal_StringPartJc_F(StringPartJc_s* ythis, int32 maxNrofChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanHexOrDecimal_StringPartJc(StringPartJc_s* ythis, int32 maxNrofChars, ThCxt* _thCxt);

/*** */
typedef struct StringPartJc_t* MT_scanIdentifier_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanIdentifier_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanIdentifier_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/*** */
typedef struct StringPartJc_t* MT_scanIdentifier_SS_StringPartJc(StringPartJc_s* ythis, StringJc additionalStartChars, StringJc additionalChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C struct StringPartJc_t* scanIdentifier_SS_StringPartJc_F(StringPartJc_s* ythis, StringJc additionalStartChars, StringJc additionalChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C struct StringPartJc_t* scanIdentifier_SS_StringPartJc(StringPartJc_s* ythis, StringJc additionalStartChars, StringJc additionalChars, ThCxt* _thCxt);

/**Returns the last scanned integer number*/
typedef int64 MT_getLastScannedIntegerNumber_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int64 getLastScannedIntegerNumber_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int64 getLastScannedIntegerNumber_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the last scanned float number.*/
typedef double MT_getLastScannedFloatNumber_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C double getLastScannedFloatNumber_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C double getLastScannedFloatNumber_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

typedef StringJc MT_getLastScannedString_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getLastScannedString_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getLastScannedString_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Gets a String with translitaration.*/
typedef StringJc MT_getCircumScriptionToAnyChar_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getCircumScriptionToAnyChar_StringPartJc_F(StringPartJc_s* ythis, StringJc sCharsEnd, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getCircumScriptionToAnyChar_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, ThCxt* _thCxt);

typedef StringJc MT_getCircumScriptionToAnyCharOutsideQuotion_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getCircumScriptionToAnyCharOutsideQuotion_StringPartJc_F(StringPartJc_s* ythis, StringJc sCharsEnd, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getCircumScriptionToAnyCharOutsideQuotion_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, ThCxt* _thCxt);

typedef StringJc MT_getCircumScriptionToAnyChar_p_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, bool bOutsideQuotion, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getCircumScriptionToAnyChar_p_StringPartJc_F(StringPartJc_s* ythis, StringJc sCharsEnd, bool bOutsideQuotion, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getCircumScriptionToAnyChar_p_StringPartJc(StringPartJc_s* ythis, StringJc sCharsEnd, bool bOutsideQuotion, ThCxt* _thCxt);

/**Gets the current position, useable for rewind*/
typedef int64 MT_getCurrentPosition_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int64 getCurrentPosition_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int64 getCurrentPosition_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Sets the current position at a fix position inside the maxPart.*/
typedef void MT_setCurrentPosition_StringPartJc(StringPartJc_s* ythis, int64 pos, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C void setCurrentPosition_StringPartJc_F(StringPartJc_s* ythis, int64 pos, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C void setCurrentPosition_StringPartJc(StringPartJc_s* ythis, int64 pos, ThCxt* _thCxt);

/**Gets a substring inside the maximal part*/
typedef StringJc MT_substring_StringPartJc(StringPartJc_s* ythis, int32 pos, int32 posendP, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc substring_StringPartJc_F(StringPartJc_s* ythis, int32 pos, int32 posendP, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc substring_StringPartJc(StringPartJc_s* ythis, int32 pos, int32 posendP, ThCxt* _thCxt);

/**Gets the next chars from current Position.*/
typedef StringJc MT_getCurrent_StringPartJc(StringPartJc_s* ythis, int32 nChars, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getCurrent_StringPartJc_F(StringPartJc_s* ythis, int32 nChars, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getCurrent_StringPartJc(StringPartJc_s* ythis, int32 nChars, ThCxt* _thCxt);

/**Gets the next char at current Position.*/
typedef char MT_getCurrentChar_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C char getCurrentChar_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C char getCurrentChar_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Gets the current position in line (column of the text).*/
typedef int32 MT_getCurrentColumn_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C int32 getCurrentColumn_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C int32 getCurrentColumn_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the actual part of the string.*/
typedef StringJc MT_getCurrentPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getCurrentPart_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getCurrentPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the last part of the string before any seek or scan operation.*/
typedef StringJc MT_getLastPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getLastPart_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getLastPart_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Returns the actual part of the string.*/
typedef StringJc MT_getCurrentPart_i_StringPartJc(StringPartJc_s* ythis, int32 maxLength, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc getCurrentPart_i_StringPartJc_F(StringPartJc_s* ythis, int32 maxLength, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc getCurrentPart_i_StringPartJc(StringPartJc_s* ythis, int32 maxLength, ThCxt* _thCxt);

/**Returns the actual part of the string*/
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc toString_StringPartJc_F(ObjectJc* ithis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc toString_StringPartJc(ObjectJc* ithis, ThCxt* _thCxt);

/**Returns a debug information of the content of the StringPart*/
typedef StringJc MT_debugString_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C StringJc debugString_StringPartJc_F(StringPartJc_s* ythis, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C StringJc debugString_StringPartJc(StringPartJc_s* ythis, ThCxt* _thCxt);

/**Central mehtod to invoke excpetion, usefull to set a breakpoint in debug*/
typedef void MT_throwIndexOutOfBoundsException_StringPartJc(StringPartJc_s* ythis, StringJc sMsg, ThCxt* _thCxt);
/* J2C:Implementation of the method, used for an immediate non-dynamic call: */
METHOD_C void throwIndexOutOfBoundsException_StringPartJc_F(StringPartJc_s* ythis, StringJc sMsg, ThCxt* _thCxt);
/* J2C:Call of the method at this class level, executes a dynamic call of the override-able method: */
METHOD_C void throwIndexOutOfBoundsException_StringPartJc(StringPartJc_s* ythis, StringJc sMsg, ThCxt* _thCxt);

/**Replaces up to 20 placeholder with a given content.*/
METHOD_C StringJc replace_StringPartJc(/*static*/ StringJc src, StringJc_Y* placeholder, StringJc_Y* value, struct StringBuilderJc_t* dst, ThCxt* _thCxt);


/* J2C: Method table contains all dynamic linked (virtual) methods
 * of the class and all super classes and interfaces. */
 extern const char sign_Mtbl_StringPartJc[]; //marker for methodTable check
typedef struct Mtbl_StringPartJc_t
{ MtblHeadJc head;
  MT_assign_S_StringPartJc* assign_S;
  MT_assign_XX_StringPartJc* assign_XX;
  MT_assignFromEnd_StringPartJc* assignFromEnd;
  MT_setIgnoreComment_b_StringPartJc* setIgnoreComment_b;
  MT_setIgnoreComment_SS_StringPartJc* setIgnoreComment_SS;
  MT_setIgnoreEndlineComment_b_StringPartJc* setIgnoreEndlineComment_b;
  MT_setIgnoreEndlineComment_S_StringPartJc* setIgnoreEndlineComment_S;
  MT_setIgnoreWhitespaces_StringPartJc* setIgnoreWhitespaces;
  MT_setBeginMaxPart_StringPartJc* setBeginMaxPart;
  MT_fromEnd_StringPartJc* fromEnd;
  MT_getLineCt_StringPartJc* getLineCt;
  MT_getLen_StringPartJc* getLen;
  MT_length_StringPartJc* length;
  MT_lengthMaxPart_StringPartJc* lengthMaxPart;
  MT_lento_i_StringPartJc* lento_i;
  MT_lento_c_StringPartJc* lento_c;
  MT_lento_S_StringPartJc* lento_S;
  MT_lento_Si_StringPartJc* lento_Si;
  MT_lentoIdentifier_StringPartJc* lentoIdentifier;
  MT_lentoIdentifier_SS_StringPartJc* lentoIdentifier_SS;
  MT_lentoAnyNonEscapedChar_StringPartJc* lentoAnyNonEscapedChar;
  MT_lentoNonEscapedString_StringPartJc* lentoNonEscapedString;
  MT_seek_i_StringPartJc* seek_i;
  MT_seekNoWhitespace_StringPartJc* seekNoWhitespace;
  MT_skipWhitespaceAndComment_StringPartJc* skipWhitespaceAndComment;
  MT_seekNoWhitespaceOrComments_StringPartJc* seekNoWhitespaceOrComments;
  MT_isFound_StringPartJc* isFound;
  MT_found_StringPartJc* found;
  MT_seekBegin_StringPartJc* seekBegin;
  MT_seek_Si_StringPartJc* seek_Si;
  MT_seekAnyString_StringPartJc* seekAnyString;
  MT_seek_ci_StringPartJc* seek_ci;
  MT_xxxseekEnd_StringPartJc* xxxseekEnd;
  MT_seekNoChar_StringPartJc* seekNoChar;
  MT_indexOfAnyChar_Sii_StringPartJc* indexOfAnyChar_Sii;
  MT_lastIndexOfAnyChar_StringPartJc* lastIndexOfAnyChar;
  MT_indexOfAnyString_StringPartJc* indexOfAnyString;
  MT_indexOfAnyCharOutsideQuotion_StringPartJc* indexOfAnyCharOutsideQuotion;
  MT_indexEndOfQuotion_StringPartJc* indexEndOfQuotion;
  MT_indexOfAnyChar_S_StringPartJc* indexOfAnyChar_S;
  MT_indexOfNoChar_Si_StringPartJc* indexOfNoChar_Si;
  MT_indexOfNoChar_S_StringPartJc* indexOfNoChar_S;
  MT_lentoAnyChar_Si_StringPartJc* lentoAnyChar_Si;
  MT_lentoAnyChar_Sii_StringPartJc* lentoAnyChar_Sii;
  MT_lentoAnyString_SYi_StringPartJc* lentoAnyString_SYi;
  MT_lentoAnyString_SYii_StringPartJc* lentoAnyString_SYii;
  MT_lentoAnyStringWithIndent_StringPartJc* lentoAnyStringWithIndent;
  MT_lentoAnyCharOutsideQuotion_StringPartJc* lentoAnyCharOutsideQuotion;
  MT_lentoQuotionEnd_StringPartJc* lentoQuotionEnd;
  MT_lentoAnyChar_S_StringPartJc* lentoAnyChar_S;
  MT_len0end_StringPartJc* len0end;
  MT_setLengthMax_StringPartJc* setLengthMax;
  MT_lenBacktoNoChar_StringPartJc* lenBacktoNoChar;
  MT_trim_StringPartJc* trim;
  MT_trimComment_StringPartJc* trimComment;
  MT_indexOf_c_StringPartJc* indexOf_c;
  MT_indexOf_ci_StringPartJc* indexOf_ci;
  MT_indexOf_S_StringPartJc* indexOf_S;
  MT_indexOf_Sii_StringPartJc* indexOf_Sii;
  MT_equals_S_StringPartJc* equals_S;
  MT_startsWith_StringPartJc* startsWith;
  MT_scan_StringPartJc* scan;
  MT_scanOk_StringPartJc* scanOk;
  MT_scanQuotion_SSSY_StringPartJc* scanQuotion_SSSY;
  MT_scanQuotion_SSSYi_StringPartJc* scanQuotion_SSSYi;
  MT_scanDigits_StringPartJc* scanDigits;
  MT_scanStart_StringPartJc* scanStart;
  MT_scanEntry_StringPartJc* scanEntry;
  MT_scanPositivInteger_StringPartJc* scanPositivInteger;
  MT_scanInteger_StringPartJc* scanInteger;
  MT_scanFloatNumber_StringPartJc* scanFloatNumber;
  MT_scanHex_StringPartJc* scanHex;
  MT_scanHexOrDecimal_StringPartJc* scanHexOrDecimal;
  MT_scanIdentifier_StringPartJc* scanIdentifier;
  MT_scanIdentifier_SS_StringPartJc* scanIdentifier_SS;
  MT_getLastScannedIntegerNumber_StringPartJc* getLastScannedIntegerNumber;
  MT_getLastScannedFloatNumber_StringPartJc* getLastScannedFloatNumber;
  MT_getLastScannedString_StringPartJc* getLastScannedString;
  MT_getCircumScriptionToAnyChar_StringPartJc* getCircumScriptionToAnyChar;
  MT_getCircumScriptionToAnyCharOutsideQuotion_StringPartJc* getCircumScriptionToAnyCharOutsideQuotion;
  MT_getCircumScriptionToAnyChar_p_StringPartJc* getCircumScriptionToAnyChar_p;
  MT_getCurrentPosition_StringPartJc* getCurrentPosition;
  MT_setCurrentPosition_StringPartJc* setCurrentPosition;
  MT_substring_StringPartJc* substring;
  MT_getCurrent_StringPartJc* getCurrent;
  MT_getCurrentChar_StringPartJc* getCurrentChar;
  MT_getCurrentColumn_StringPartJc* getCurrentColumn;
  MT_getCurrentPart_StringPartJc* getCurrentPart;
  MT_getLastPart_StringPartJc* getLastPart;
  MT_getCurrentPart_i_StringPartJc* getCurrentPart_i;
  MT_debugString_StringPartJc* debugString;
  MT_throwIndexOutOfBoundsException_StringPartJc* throwIndexOutOfBoundsException;
  Mtbl_ObjectJc ObjectJc;
} Mtbl_StringPartJc;



#if defined(__CPLUSPLUSJcpp) && defined(__cplusplus)
/* J2C: The C++-class-definition. */
class StringPartJc : private StringPartJc_s
{ public:

  virtual StringPartJc& assignFromEnd(struct StringPartJc_t* src){ assignFromEnd_StringPartJc_F(this, src,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& assign(StringJcpp content){ assign_S_StringPartJc_F(this, content,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& assign(struct StringPartJc_t* src){ assign_XX_StringPartJc_F(this, src,  null/*_thCxt*/);  return *this; }

  StringPartJc(StringJcpp content){ init_ObjectJc(&this->base.object, sizeof(StringPartJc_s), 0); setReflection_ObjectJc(&this->base.object, &reflection_StringPartJc_s, 0); ctorO_S_StringPartJc(&this->base.object, content,  null/*_thCxt*/); }

  StringPartJc(){ init_ObjectJc(&this->base.object, sizeof(StringPartJc_s), 0); setReflection_ObjectJc(&this->base.object, &reflection_StringPartJc_s, 0); ctorO_StringPartJc(&this->base.object,  null/*_thCxt*/); }

  StringPartJc(struct StringPartJc_t* src){ init_ObjectJc(&this->base.object, sizeof(StringPartJc_s), 0); setReflection_ObjectJc(&this->base.object, &reflection_StringPartJc_s, 0); ctorO_XX_StringPartJc(&this->base.object, src,  null/*_thCxt*/); }

  virtual StringJc debugString(){  return debugString_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual bool equals(StringJcpp sCmp){  return equals_S_StringPartJc_F(this, sCmp,  null/*_thCxt*/); }

  virtual bool found(){  return found_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringPartJc& fromEnd(){ fromEnd_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringJc getCircumScriptionToAnyCharOutsideQuotion(StringJcpp sCharsEnd){  return getCircumScriptionToAnyCharOutsideQuotion_StringPartJc_F(this, sCharsEnd,  null/*_thCxt*/); }

  virtual StringJc getCircumScriptionToAnyChar(StringJcpp sCharsEnd){  return getCircumScriptionToAnyChar_StringPartJc_F(this, sCharsEnd,  null/*_thCxt*/); }

  virtual StringJc getCircumScriptionToAnyChar_p(StringJcpp sCharsEnd, bool bOutsideQuotion){  return getCircumScriptionToAnyChar_p_StringPartJc_F(this, sCharsEnd, bOutsideQuotion,  null/*_thCxt*/); }

  virtual char getCurrentChar(){  return getCurrentChar_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int32 getCurrentColumn(){  return getCurrentColumn_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringJc getCurrentPart(){  return getCurrentPart_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringJc getCurrentPart(int32 maxLength){  return getCurrentPart_i_StringPartJc_F(this, maxLength,  null/*_thCxt*/); }

  virtual int64 getCurrentPosition(){  return getCurrentPosition_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringJc getCurrent(int32 nChars){  return getCurrent_StringPartJc_F(this, nChars,  null/*_thCxt*/); }

  virtual StringJc getLastPart(){  return getLastPart_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual double getLastScannedFloatNumber(){  return getLastScannedFloatNumber_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int64 getLastScannedIntegerNumber(){  return getLastScannedIntegerNumber_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringJc getLastScannedString(){  return getLastScannedString_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int32 getLen(){  return getLen_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int32 getLineCt(){  return getLineCt_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int32 indexEndOfQuotion(char cEndQuotion, int32 fromWhere, int32 maxToTest){  return indexEndOfQuotion_StringPartJc_F(this, cEndQuotion, fromWhere, maxToTest,  null/*_thCxt*/); }

  virtual int32 indexOfAnyCharOutsideQuotion(StringJcpp sChars, int32 fromWhere, int32 maxToTest){  return indexOfAnyCharOutsideQuotion_StringPartJc_F(this, sChars, fromWhere, maxToTest,  null/*_thCxt*/); }

  virtual int32 indexOfAnyChar(StringJcpp sChars){  return indexOfAnyChar_S_StringPartJc_F(this, sChars,  null/*_thCxt*/); }

  virtual int32 indexOfAnyChar(StringJcpp sChars, int32 fromWhere, int32 maxToTest){  return indexOfAnyChar_Sii_StringPartJc_F(this, sChars, fromWhere, maxToTest,  null/*_thCxt*/); }

  virtual int32 indexOfAnyString(StringJc_Y* listStrings, int32 fromWhere, int32 maxToTest, int32_Y* nrofFoundString, StringJc_Y* foundString){  return indexOfAnyString_StringPartJc_F(this, listStrings, fromWhere, maxToTest, nrofFoundString, foundString,  null/*_thCxt*/); }

  virtual int32 indexOfNoChar(StringJcpp sChars){  return indexOfNoChar_S_StringPartJc_F(this, sChars,  null/*_thCxt*/); }

  virtual int32 indexOfNoChar(StringJcpp sChars, int32 fromWhere){  return indexOfNoChar_Si_StringPartJc_F(this, sChars, fromWhere,  null/*_thCxt*/); }

  virtual int32 indexOf(StringJcpp sCmp){  return indexOf_S_StringPartJc_F(this, sCmp,  null/*_thCxt*/); }

  virtual int32 indexOf(StringJcpp sCmp, int32 fromIndex, int32 maxToTest){  return indexOf_Sii_StringPartJc_F(this, sCmp, fromIndex, maxToTest,  null/*_thCxt*/); }

  virtual int32 indexOf(char ch){  return indexOf_c_StringPartJc_F(this, ch,  null/*_thCxt*/); }

  virtual int32 indexOf(char ch, int32 fromIndex){  return indexOf_ci_StringPartJc_F(this, ch, fromIndex,  null/*_thCxt*/); }

  virtual bool isFound(){  return isFound_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int32 lastIndexOfAnyChar(StringJcpp sChars, int32 fromWhere, int32 maxToTest){  return lastIndexOfAnyChar_StringPartJc_F(this, sChars, fromWhere, maxToTest,  null/*_thCxt*/); }

  virtual StringPartJc& len0end(){ len0end_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lenBacktoNoChar(StringJcpp sChars){ lenBacktoNoChar_StringPartJc_F(this, sChars,  null/*_thCxt*/);  return *this; }

  virtual int32 lengthMaxPart(){  return lengthMaxPart_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual int32 length(){  return length_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringPartJc& lentoAnyCharOutsideQuotion(StringJcpp sChars, int32 maxToTest){ lentoAnyCharOutsideQuotion_StringPartJc_F(this, sChars, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoAnyChar(StringJcpp sChars){ lentoAnyChar_S_StringPartJc_F(this, sChars,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoAnyChar(StringJcpp sChars, int32 maxToTest){ lentoAnyChar_Si_StringPartJc_F(this, sChars, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoAnyChar(StringJcpp sChars, int32 maxToTest, int32 mode){ lentoAnyChar_Sii_StringPartJc_F(this, sChars, maxToTest, mode,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoAnyNonEscapedChar(StringJcpp sCharsEnd, int32 maxToTest){ lentoAnyNonEscapedChar_StringPartJc_F(this, sCharsEnd, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual void lentoAnyStringWithIndent(StringJc_Y* strings, StringJcpp sIndentChars, int32 maxToTest, struct StringBuilderJc_t* buffer){ lentoAnyStringWithIndent_StringPartJc_F(this, strings, sIndentChars, maxToTest, buffer,  null/*_thCxt*/); }

  virtual StringPartJc& lentoAnyString(StringJc_Y* strings, int32 maxToTest){ lentoAnyString_SYi_StringPartJc_F(this, strings, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoAnyString(StringJc_Y* strings, int32 maxToTest, int32 mode){ lentoAnyString_SYii_StringPartJc_F(this, strings, maxToTest, mode,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoIdentifier(StringJcpp additionalStartChars, StringJcpp additionalChars){ lentoIdentifier_SS_StringPartJc_F(this, additionalStartChars, additionalChars,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoIdentifier(){ lentoIdentifier_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoNonEscapedString(StringJcpp sEnd, int32 maxToTest){ lentoNonEscapedString_StringPartJc_F(this, sEnd, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lentoQuotionEnd(char sEndQuotion, int32 maxToTest){ lentoQuotionEnd_StringPartJc_F(this, sEndQuotion, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lento(StringJcpp ss){ lento_S_StringPartJc_F(this, ss,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lento(StringJcpp ss, int32 mode){ lento_Si_StringPartJc_F(this, ss, mode,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lento(char cc){ lento_c_StringPartJc_F(this, cc,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& lento(int32 len){ lento_i_StringPartJc_F(this, len,  null/*_thCxt*/);  return *this; }

  StringJc replace(StringJcpp src, StringJc_Y* placeholder, StringJc_Y* value, struct StringBuilderJc_t* dst){  return replace_StringPartJc(src, placeholder, value, dst,  null/*_thCxt*/); }

  virtual int64 scanDigits(bool bHex, int32 maxNrofChars){  return scanDigits_StringPartJc_F(this, bHex, maxNrofChars,  null/*_thCxt*/); }

  virtual bool scanEntry(){  return scanEntry_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringPartJc& scanFloatNumber(){ scanFloatNumber_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanHexOrDecimal(int32 maxNrofChars){ scanHexOrDecimal_StringPartJc_F(this, maxNrofChars,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanHex(int32 maxNrofChars){ scanHex_StringPartJc_F(this, maxNrofChars,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanIdentifier(StringJcpp additionalStartChars, StringJcpp additionalChars){ scanIdentifier_SS_StringPartJc_F(this, additionalStartChars, additionalChars,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanIdentifier(){ scanIdentifier_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanInteger(){ scanInteger_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual bool scanOk(){  return scanOk_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual StringPartJc& scanPositivInteger(){ scanPositivInteger_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanQuotion(StringJcpp sQuotionmarkStart, StringJcpp sQuotionMarkEnd, StringJc_Y* sResult){ scanQuotion_SSSY_StringPartJc_F(this, sQuotionmarkStart, sQuotionMarkEnd, sResult,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanQuotion(StringJcpp sQuotionmarkStart, StringJcpp sQuotionMarkEnd, StringJc_Y* sResult, int32 maxToTest){ scanQuotion_SSSYi_StringPartJc_F(this, sQuotionmarkStart, sQuotionMarkEnd, sResult, maxToTest,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scanStart(){ scanStart_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& scan(StringJcpp sTestP){ scan_StringPartJc_F(this, sTestP,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seekAnyString(StringJc_Y* strings, int32_Y* nrofFoundString){ seekAnyString_StringPartJc_F(this, strings, nrofFoundString,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seekBegin(){ seekBegin_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seekNoChar(StringJcpp sChars){ seekNoChar_StringPartJc_F(this, sChars,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seekNoWhitespaceOrComments(){ seekNoWhitespaceOrComments_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seekNoWhitespace(){ seekNoWhitespace_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seek(StringJcpp sSeek, int32 mode){ seek_Si_StringPartJc_F(this, sSeek, mode,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seek(char cSeek, int32 mode){ seek_ci_StringPartJc_F(this, cSeek, mode,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& seek(int32 nr){ seek_i_StringPartJc_F(this, nr,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& setBeginMaxPart(){ setBeginMaxPart_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual void setCurrentPosition(int64 pos){ setCurrentPosition_StringPartJc_F(this, pos,  null/*_thCxt*/); }

  virtual bool setIgnoreComment(StringJcpp sStart, StringJcpp sEnd){  return setIgnoreComment_SS_StringPartJc_F(this, sStart, sEnd,  null/*_thCxt*/); }

  virtual bool setIgnoreComment(bool bSet){  return setIgnoreComment_b_StringPartJc_F(this, bSet,  null/*_thCxt*/); }

  virtual bool setIgnoreEndlineComment(StringJcpp sStart){  return setIgnoreEndlineComment_S_StringPartJc_F(this, sStart,  null/*_thCxt*/); }

  virtual bool setIgnoreEndlineComment(bool bSet){  return setIgnoreEndlineComment_b_StringPartJc_F(this, bSet,  null/*_thCxt*/); }

  virtual bool setIgnoreWhitespaces(bool bSet){  return setIgnoreWhitespaces_StringPartJc_F(this, bSet,  null/*_thCxt*/); }

  virtual StringPartJc& setLengthMax(){ setLengthMax_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual struct StringPartJc_t* skipWhitespaceAndComment(){  return skipWhitespaceAndComment_StringPartJc_F(this,  null/*_thCxt*/); }

  virtual bool startsWith(StringJcpp sCmp){  return startsWith_StringPartJc_F(this, sCmp,  null/*_thCxt*/); }

  virtual StringJc substring(int32 pos, int32 posendP){  return substring_StringPartJc_F(this, pos, posendP,  null/*_thCxt*/); }

  virtual void throwIndexOutOfBoundsException(StringJcpp sMsg){ throwIndexOutOfBoundsException_StringPartJc_F(this, sMsg,  null/*_thCxt*/); }

  virtual StringJc toString(){  return toString_StringPartJc_F(&this->base.object,  null/*_thCxt*/); }

  virtual StringPartJc& trimComment(){ trimComment_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& trim(){ trim_StringPartJc_F(this,  null/*_thCxt*/);  return *this; }

  virtual StringPartJc& xxxseekEnd(StringJcpp sSeek){ xxxseekEnd_StringPartJc_F(this, sSeek,  null/*_thCxt*/);  return *this; }
};

#endif /*__CPLUSPLUSJcpp*/

#endif //__J1c_StringPartJc_h__
